{
    "groups": {
        "disaster": {
            "index": 1,
            "name": "disaster",
            "type": "rule",
            "description": "",
            "icon": "far fa-times-circle",
            "color": "color-red",
            "alt": ""
        },
        "disbalance": {
            "index": 2,
            "name": "disbalance",
            "type": "rule",
            "description": "",
            "icon": "fas fa-balance-scale",
            "color": "color-regular",
            "alt": "stream ? chart-bar ? sort-amount-up ?"
        },
        "general_low_efficiency": {
            "index": 3,
            "name": "general_low_efficiency",
            "type": "rule",
            "description": "",
            "icon": "fas fa-balance-scale",
            "color": "color-regular",
            "alt": "(а можно кстати взять такой же как disaster, только окрасить в оранжевый/желтый)"
        },
        "gpu_based": {
            "index": 4,
            "name": "gpu_based",
            "type": "rule",
            "description": "",
            "icon": "fas fa-tachometer-alt",
            "color": "color-regular",
            "alt": ""
        },
        "incorrect_behavior": {
            "index": 5,
            "name": "incorrect_behavior",
            "type": "rule",
            "description": "",
            "icon": "fas fa-ban",
            "color": "color-regular",
            "alt": ""
        },
        "inefficient_mpi": {
            "index": 6,
            "name": "inefficient_mpi",
            "type": "rule",
            "description": "",
            "icon": "fas fa-exchange-alt",
            "color": "color-regular",
            "alt": ""
        },
        "inefficient_network_packets": {
            "index": 7,
            "name": "inefficient_network_packets",
            "type": "rule",
            "description": "",
            "icon": "fas fa-project-diagram",
            "color": "color-regular",
            "alt": ""
        },
        "serial_like_jobs": {
            "index": 8,
            "name": "serial_like_jobs",
            "type": "rule",
            "description": "",
            "icon": "fas fa-laptop",
            "color": "color-regular",
            "alt": "desktop"
        },
        "suspicious_and_not_communicative": {
            "index": 9,
            "name": "suspicious_and_not_communicative",
            "type": "rule",
            "description": "",
            "icon": "fas fa-comment-slash",
            "color": "color-regular",
            "alt": ""
        },
        "wrong_partition": {
            "index": 10,
            "name": "wrong_partition",
            "type": "rule",
            "description": "",
            "icon": "fas fa-random",
            "color": "color-regular",
            "alt": ""
        }
    },
    "thresholds": {
        "thr_high_loadavg": {
            "index": 1,
            "name": "thr_high_loadavg",
            "is_enabled": 1,
            "public": 1,
            "description": "LoadAVG > 32",
            "comment": "LoadAVG > 32",
            "src_file": "thresholds.py"
        },
        "thr_low_loadavg": {
            "index": 2,
            "name": "thr_low_loadavg",
            "is_enabled": 1,
            "public": 1,
            "description": "LoadAVG < 4",
            "comment": "LoadAVG < 4",
            "src_file": "thresholds.py"
        },
        "thr_high_cpu_user": {
            "index": 3,
            "name": "thr_high_cpu_user",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU user load > 80%",
            "comment": "CPU user load > 80%",
            "src_file": "thresholds.py"
        },
        "thr_low_cpu_user": {
            "index": 4,
            "name": "thr_low_cpu_user",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU user load < 10%",
            "comment": "CPU user load < 10%",
            "src_file": "thresholds.py"
        },
        "thr_high_cpu_system": {
            "index": 5,
            "name": "thr_high_cpu_system",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU system load > 10%",
            "comment": "CPU system load > 10%",
            "src_file": "thresholds.py"
        },
        "thr_low_cpu_system": {
            "index": 6,
            "name": "thr_low_cpu_system",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU system load < 5%",
            "comment": "CPU system load < 5%",
            "src_file": "thresholds.py"
        },
        "thr_high_cpu_irq": {
            "index": 7,
            "name": "thr_high_cpu_irq",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU irq load > 10%",
            "comment": "CPU irq load > 10%",
            "src_file": "thresholds.py"
        },
        "thr_low_cpu_irq": {
            "index": 8,
            "name": "thr_low_cpu_irq",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU irq load < 1%",
            "comment": "CPU irq load < 1%",
            "src_file": "thresholds.py"
        },
        "thr_high_cpu_nice": {
            "index": 9,
            "name": "thr_high_cpu_nice",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU nice load > 3%",
            "comment": "CPU nice load > 10%",
            "src_file": "thresholds.py"
        },
        "thr_low_cpu_nice": {
            "index": 10,
            "name": "thr_low_cpu_nice",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU nice load < 1%",
            "comment": "CPU nice load < 1%",
            "src_file": "thresholds.py"
        },
        "thr_high_cpu_iowait": {
            "index": 11,
            "name": "thr_high_cpu_iowait",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU IO wait > 1%",
            "comment": "CPU IO wait > 1%",
            "src_file": "thresholds.py"
        },
        "thr_low_cpu_iowait": {
            "index": 12,
            "name": "thr_low_cpu_iowait",
            "is_enabled": 1,
            "public": 1,
            "description": "CPU IO wait < 0.1%",
            "comment": "CPU IO wait < 0.1%",
            "src_file": "thresholds.py"
        },
        "thr_high_gpu_load": {
            "index": 13,
            "name": "thr_high_gpu_load",
            "is_enabled": 1,
            "public": 1,
            "description": "GPU load > 80%",
            "comment": "GPU load > 80%",
            "src_file": "thresholds.py"
        },
        "thr_low_gpu_load": {
            "index": 14,
            "name": "thr_low_gpu_load",
            "is_enabled": 1,
            "public": 1,
            "description": "GPU load < 10%",
            "comment": "GPU load < 10%",
            "src_file": "thresholds.py"
        },
        "thr_high_ib_mpi": {
            "index": 15,
            "name": "thr_high_ib_mpi",
            "is_enabled": 1,
            "public": 1,
            "description": "MPI IB speed (recv OR xmit) > 1.0 * 10 ** 9 B/s",
            "comment": "MPI IB speed (recv OR xmit) > 1.0 * 10 ** 9 B/s",
            "src_file": "thresholds.py"
        },
        "thr_low_ib_mpi": {
            "index": 16,
            "name": "thr_low_ib_mpi",
            "is_enabled": 1,
            "public": 1,
            "description": "MPI IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s",
            "comment": "MPI IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s",
            "src_file": "thresholds.py"
        },
        "thr_high_ib_fs": {
            "index": 17,
            "name": "thr_high_ib_fs",
            "is_enabled": 1,
            "public": 1,
            "description": "FS IB speed (recv OR xmit)  > 4.0 * 10 ** 8 B/s",
            "comment": "FS IB speed (recv OR xmit)  > 4.0 * 10 ** 8 B/s",
            "src_file": "thresholds.py"
        },
        "thr_low_ib_fs": {
            "index": 18,
            "name": "thr_low_ib_fs",
            "is_enabled": 1,
            "public": 1,
            "description": "FS IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s",
            "comment": "FS IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s",
            "src_file": "thresholds.py"
        },
        "thr_high_ib": {
            "index": 19,
            "name": "thr_high_ib",
            "is_enabled": 1,
            "public": 1,
            "description": "High MPI and FS IB speed (MPI IB speed (recv OR xmit) > 1.0 * 10 ** 9 B/s AND FS IB speed (recv OR xmit)  > 1.0 * 10 ** 9 B/s)",
            "comment": "High MPI and FS IB speed (MPI IB speed (recv OR xmit) > 1.0 * 10 ** 9 B/s AND FS IB speed (recv OR xmit)  > 1.0 * 10 ** 9 B/s)",
            "src_file": "thresholds.py"
        },
        "thr_low_ib": {
            "index": 20,
            "name": "thr_low_ib",
            "is_enabled": 1,
            "public": 1,
            "description": "Low MPI and FS IB speed (MPI IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s AND FS IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s)",
            "comment": "Low MPI and FS IB speed (MPI IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s AND FS IB speed (recv AND xmit)  < 4.0 * 10 ** 6 B/s)",
            "src_file": "thresholds.py"
        },
        "thr_high_mem_load": {
            "index": 21,
            "name": "thr_high_mem_load",
            "is_enabled": 1,
            "public": 1,
            "description": "mem load >  7 * 10 ** 8 B/s",
            "comment": "mem load >  7 * 10 ** 8 B/s",
            "src_file": "thresholds.py"
        },
        "thr_low_mem_load": {
            "index": 22,
            "name": "thr_low_mem_load",
            "is_enabled": 1,
            "public": 1,
            "description": "mem load <  1 * 10 ** 8 B/s",
            "comment": "mem load <  0.5 * 10 ** 8 B/s",
            "src_file": "thresholds.py"
        },
        "thr_high_mem_store": {
            "index": 23,
            "name": "thr_high_mem_store",
            "is_enabled": 1,
            "public": 1,
            "description": "mem load > 2.5 * 10 ** 8 B/s",
            "comment": "mem load > 2.5 * 10 ** 8 B/s",
            "src_file": "thresholds.py"
        },
        "thr_low_mem_store": {
            "index": 24,
            "name": "thr_low_mem_store",
            "is_enabled": 1,
            "public": 1,
            "description": "mem load < 0.5 * 10 ** 8 B/s",
            "comment": "mem load < 0.5 * 10 ** 8 B/s",
            "src_file": "thresholds.py"
        },
        "thr_high_l1_cache_miss": {
            "index": 25,
            "name": "thr_high_l1_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss > 5 * 10 ** 7 misses/s",
            "comment": "l1 miss > 5 * 10 ** 7 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_low_l1_cache_miss": {
            "index": 26,
            "name": "thr_low_l1_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss < 2.5 * 10 ** 6 misses/s",
            "comment": "l1 miss < 2.5 * 10 ** 6 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_high_l2_cache_miss": {
            "index": 27,
            "name": "thr_high_l2_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss > 2 * 10 ** 7 misses/s",
            "comment": "l1 miss > 2 * 10 ** 7 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_low_l2_cache_miss": {
            "index": 28,
            "name": "thr_low_l2_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss < 3 * 10 ** 6 misses/s",
            "comment": "l1 miss < 3 * 10 ** 6 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_high_llc_cache_miss": {
            "index": 29,
            "name": "thr_high_llc_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss > 2 * 10 ** 6 misses/s",
            "comment": "l1 miss > 2 * 10 ** 6 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_low_llc_cache_miss": {
            "index": 30,
            "name": "thr_low_llc_cache_miss",
            "is_enabled": 1,
            "public": 1,
            "description": "l1 miss < 1 * 10 ** 5 misses/s",
            "comment": "l1 miss < 1 * 10 ** 3 misses/s",
            "src_file": "thresholds.py"
        },
        "thr_high_network_sparsity": {
            "index": 31,
            "name": "thr_high_network_sparsity",
            "is_enabled": 1,
            "public": 1,
            "description": "num_nodes > 1 AND network locality > 4",
            "comment": "num_nodes > 1 AND network locality > 4",
            "src_file": "thresholds.py"
        },
        "thr_low_network_sparsity": {
            "index": 32,
            "name": "thr_low_network_sparsity",
            "is_enabled": 1,
            "public": 1,
            "description": "num_nodes > 1 AND network locality < 2",
            "comment": "num_nodes > 1 AND network locality < 2",
            "src_file": "thresholds.py"
        },
        "thr_high_ipc": {
            "index": 33,
            "name": "thr_high_ipc",
            "is_enabled": 1,
            "public": 1,
            "description": "IPC > 2.25",
            "comment": "IPC > 2.25",
            "src_file": "thresholds.py"
        },
        "thr_low_ipc": {
            "index": 34,
            "name": "thr_low_ipc",
            "is_enabled": 1,
            "public": 1,
            "description": "IPC < 0.75",
            "comment": "IPC < 0.75",
            "src_file": "thresholds.py"
        },
        "thr_low_memory_free": {
            "index": 35,
            "name": "thr_low_memory_free",
            "is_enabled": 1,
            "public": 1,
            "description": "memory_free < 16 * 10 ** 9",
            "comment": "memory_free < 16 * 10 ** 9",
            "src_file": "thresholds.py"
        },
        "thr_high_memory_free": {
            "index": 36,
            "name": "thr_high_memory_free",
            "is_enabled": 1,
            "public": 1,
            "description": "memory_free > 60 * 10 ** 9 (90 for pascal)",
            "comment": "memory_free > 60 * 10 ** 9 (90 for pascal)",
            "src_file": "thresholds.py"
        }
    },
    "classes": {
        "class_suspicious": {
            "index": 1,
            "name": "class_suspicious",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача практически не использует вычислительные ресурсы СК",
            "comment": "Средняя загрузка процессора и средний load average меньше нормальной загрузки при 1 активном процессе на узле; загрузка ГПУ также низкая. ",
            "src_file": "classes.py",
            "group": "general_efficiency",
            "priority": 2,
            "confidence": 4,
            "criticalness": 4
        },
        "class_high_cpu_at_la": {
            "index": 2,
            "name": "class_high_cpu_at_la",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком высокая загрузка процессора при данном уровне loadavg",
            "comment": "При данном значении loadavg загрузка процессора обычно ниже.",
            "src_file": "classes.py",
            "group": "general_efficiency",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3
        },
        "class_less_suspicious": {
            "index": 3,
            "name": "class_less_suspicious",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача слабо использует вычислительные ресурсы СК",
            "comment": "Средняя загрузка процессора и средний load average меньше нормальной загрузки при 4 активных процессах на узле; загрузка ГПУ также низкая. Либо загрузка ГПУ повыше, тогда меньше нормальной загрузки при 1 активном процессе на узле.",
            "src_file": "classes.py",
            "group": "general_efficiency",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3
        },
        "class_low_cpu_at_la": {
            "index": 4,
            "name": "class_low_cpu_at_la",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком низкая загрузка процессора при данном уровне loadavg",
            "comment": "При данном значении loadavg загрузка процессора обычно заметно выше.",
            "src_file": "classes.py",
            "group": "general_efficiency",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3
        },
        "class_gpu_pure": {
            "index": 5,
            "name": "class_gpu_pure",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача использует только GPU",
            "comment": "Загрузка ГПУ очень высока, загрузка процессора низка.",
            "src_file": "classes.py",
            "group": "gpu_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3
        },
        "class_bad_locality": {
            "index": 6,
            "name": "class_bad_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача имеет низкую локальность обращений в память",
            "comment": "Соотношение интенсивности (load+store) операций к L1 кэш-промахам, а также соотношение L1 к L3 кэш-промахам небольшое.",
            "src_file": "classes.py",
            "group": "memory_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3
        },
        "class_big_job_not_comm": {
            "index": 7,
            "name": "class_big_job_not_comm",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача занимает много узлов, но MPI коммуникаций совсем мало.",
            "comment": "Задача занимает много узлов, но вычисления на узлах практически независимы.",
            "src_file": "classes.py",
            "group": "MPI_based",
            "priority": 2,
            "confidence": 3,
            "criticalness": 3
        },
        "class_ml_activity_decrease": {
            "index": 8,
            "name": "class_ml_activity_decrease",
            "is_enabled": 1,
            "public": 1,
            "description": "Постепенное снижение активности работы задачи",
            "comment": "Сработал тип Дениса activity_decrease.",
            "src_file": "classes.py",
            "group": "general_properties",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3
        },
        "class_low_ib_high_gpu": {
            "index": 9,
            "name": "class_low_ib_high_gpu",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача активно испольузет GPU, а узлы мало общаются между собой",
            "comment": "Задача задействует более 1 узла, загрузка ГПУ высока, но задача слабо использует MPI.",
            "src_file": "classes.py",
            "group": "gpu_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 2
        },
        "class_low_avg_mem_usage": {
            "index": 10,
            "name": "class_low_avg_mem_usage",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком низкая интенсивность работы с памятью.",
            "comment": "Подозрительно низкая интенсивность работы с памятью при текущих нормальных остальных параметрах задачи.",
            "src_file": "classes.py",
            "group": "memory_based",
            "priority": 1,
            "confidence": 2,
            "criticalness": 2
        },
        "class_weird_locality": {
            "index": 11,
            "name": "class_weird_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача имеет необычную локальность обращений в память",
            "comment": "Соотношение интенсивности (load+store) операций к L1 кэш-промахам большое, а соотношение L1 к L3 кэш-промахам небольшое (что странно, такого вроде не должно быть).",
            "src_file": "classes.py",
            "group": "memory_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 2
        },
        "class_comm_packets": {
            "index": 12,
            "name": "class_comm_packets",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача шлёт много MPI пакетов",
            "comment": "Задача не очень активно использует MPI, однако передается (или получается) много MPI пакетов.",
            "src_file": "classes.py",
            "group": "MPI_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 2
        },
        "class_not_comm": {
            "index": 13,
            "name": "class_not_comm",
            "is_enabled": 1,
            "public": 1,
            "description": "В задаче мало MPI коммуникаций",
            "comment": "Задача задействует несколько узлов, однако MPI сеть задействована слабо.",
            "src_file": "classes.py",
            "group": "MPI_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 2
        },
        "class_serial": {
            "index": 14,
            "name": "class_serial",
            "is_enabled": 1,
            "public": 1,
            "description": "Одноядерная задача",
            "comment": "Задача задействует один узел, и средний load average примерно равен 1.",
            "src_file": "classes.py",
            "group": "serial_like_jobs",
            "priority": 2,
            "confidence": 4,
            "criticalness": 2
        },
        "class_sc_appropriate": {
            "index": 15,
            "name": "class_sc_appropriate",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача хорошо использует ресурсы СК",
            "comment": "Средний load average оптимальный, также задача активно использует MPI.",
            "src_file": "classes.py",
            "group": "general_efficiency",
            "priority": 1,
            "confidence": 4,
            "criticalness": 1
        },
        "class_gpu_hybrid_good": {
            "index": 16,
            "name": "class_gpu_hybrid_good",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача хорошо испольует и GPU и CPU",
            "comment": "Загрузка ГПУ и загрузка процессора достаточно высока.",
            "src_file": "classes.py",
            "group": "gpu_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 1
        },
        "class_short": {
            "index": 17,
            "name": "class_short",
            "is_enabled": 1,
            "public": 1,
            "description": "Короткая задача (< 15 минут)",
            "comment": "Задачи с данным тегом выполняются очень быстро, поэтому не представляют большого интереса для анализа эффективности.",
            "src_file": "classes.py",
            "group": "job_duration",
            "priority": 1,
            "confidence": 5,
            "criticalness": 1
        },
        "class_super_short": {
            "index": 18,
            "name": "class_super_short",
            "is_enabled": 1,
            "public": 1,
            "description": "Очень короткая задача (< 6 минут)",
            "comment": "Задачи с данным тегом не могут быть проанализированы, поскольку для них не собираются данные системного монтиоринга.",
            "src_file": "classes.py",
            "group": "job_duration",
            "priority": 2,
            "confidence": 5,
            "criticalness": 1
        },
        "class_data_intensive": {
            "index": 19,
            "name": "class_data_intensive",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача активно работает с памятью",
            "comment": "Интенсивность выполнения операций чтения или записи высока.",
            "src_file": "classes.py",
            "group": "memory_based",
            "priority": 1,
            "confidence": 4,
            "criticalness": 1
        },
        "class_good_locality": {
            "index": 20,
            "name": "class_good_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача имеет высокую локальность обращений в память",
            "comment": "Соотношение интенсивности (load+store) операций к L1 кэш-промахам, а также соотношение L1 к L3 кэш-промахам достаточно большое.",
            "src_file": "classes.py",
            "group": "memory_based",
            "priority": 1,
            "confidence": 3,
            "criticalness": 1
        },
        "class_comm_data": {
            "index": 21,
            "name": "class_comm_data",
            "is_enabled": 1,
            "public": 1,
            "description": "В задаче много MPI коммуникаций",
            "comment": "Задача активно использует MPI.",
            "src_file": "classes.py",
            "group": "MPI_based",
            "priority": 1,
            "confidence": 4,
            "criticalness": 1
        },
        "class_single": {
            "index": 22,
            "name": "class_single",
            "is_enabled": 1,
            "public": 1,
            "description": "Одноузловая задача",
            "comment": "Задача задействует один узел.",
            "src_file": "classes.py",
            "group": "serial_like_jobs",
            "priority": 1,
            "confidence": 4,
            "criticalness": 1
        },
        "class_ml_initial_data_read": {
            "index": 23,
            "name": "class_ml_initial_data_read",
            "is_enabled": 1,
            "public": 1,
            "description": "Активное чтение входных данных в начале запуска",
            "comment": "Сработал тип Дениса initial_data_read.",
            "src_file": "classes.py",
            "group": "general_properties",
            "priority": 1,
            "confidence": 3,
            "criticalness": 1
        },
        "class_ml_final_data_write": {
            "index": 24,
            "name": "class_ml_final_data_write",
            "is_enabled": 0,
            "public": 0,
            "description": "Активная запись выходных данных в конце запуска",
            "comment": "Сработал тип Дениса final_data_write.",
            "src_file": "classes.py",
            "group": "general_properties",
            "priority": 1,
            "confidence": 3,
            "criticalness": 1
        }
    },
    "rules": {
        "rule_anomaly": {
            "index": 1,
            "name": "rule_anomaly",
            "is_enabled": 1,
            "public": 1,
            "description": "Чрезвычайно низкая активность использования всех доступных ресурсов.",
            "comment": "Средняя загрузка процессора и средний load average катастрофически низки; загрузка ГПУ также очень низкая. ",
            "src_file": "rules_integral_based.py",
            "group": "disaster",
            "priority": 1,
            "confidence": 5,
            "criticalness": 5,
            "supposition": "Задача работает некорректно или зависла.",
            "text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его."
        },
        "rule_ml_anomaly": {
            "index": 2,
            "name": "rule_ml_anomaly",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача выполняется аномально неэффективно.",
            "comment": "Классификатор Дениса отметил данную задачу как аномальную.",
            "src_file": "rules_integral_based.py",
            "group": "disaster",
            "priority": 1,
            "confidence": 5,
            "criticalness": 5,
            "supposition": "Задача работает некорректно или зависла.",
            "text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его."
        },
        "rule_ml_job_hang": {
            "index": 3,
            "name": "rule_ml_job_hang",
            "is_enabled": 1,
            "public": 1,
            "description": "Согласно данным мониторинга, задача зависла.",
            "comment": "Сработал тип Дениса job_hang.",
            "src_file": "rules_integral_based.py",
            "group": "disaster",
            "priority": 1,
            "confidence": 4,
            "criticalness": 5,
            "supposition": "На данном этапе определить причины зависания задачи не представляется возможным.",
            "text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска и при необходимости отменить его."
        },
        "rule_disbalance_cpu_la": {
            "index": 4,
            "name": "rule_disbalance_cpu_la",
            "is_enabled": 1,
            "public": 1,
            "description": "Заметный дисбаланс внутри узлов либо активность сильно отличается на разных узлах.",
            "comment": "max_cpu_user * avg_loadavg  / (avg_cpu_user * 28) > 2",
            "src_file": "rules_integral_based.py",
            "group": "disbalance",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Разбалансировка нагрузки внутри узла либо между узлами.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "general-aps,profiling-mpip",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения;2) Общий анализ программы (если нет MPI);3) Профилирование MPI-программы (если MPI есть)."
        },
        "rule_mem_disbalance": {
            "index": 5,
            "name": "rule_mem_disbalance",
            "is_enabled": 1,
            "public": 1,
            "description": "Заметный дисбаланс внутри узлов по использовании памяти.",
            "comment": "((max_l1/avg_l1 > MEM_DISBALANCE) AND (max_l1 > L1_MISS_LOW)) AND (max_llc/avg_llc > MEM_DISBALANCE) AND (max_llc > LLC_MISS_LOW)) AND thr_low_mem_load AND thr_low_mem_store",
            "src_file": "rules_integral_based.py",
            "group": "disbalance",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Такой заметный дисбаланс приводит к снижению эффективности работы программы, поскольку одним узлам приходится ждать другие.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "general-aps,mem_eff-valgrind",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения;2) Общий анализ программы; 3) Анализ эффективности работы с памятью."
        },
        "rule_avg_disbalance": {
            "index": 6,
            "name": "rule_avg_disbalance",
            "is_enabled": 0,
            "public": 0,
            "description": "Интенсивность использования ресурсов сильно отличается на разных узлах.",
            "comment": "TODO",
            "src_file": "rules_integral_based.py",
            "group": "disbalance",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Разбалансировка нагрузки между узлами.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "general-aps,profiling-mpip",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения; 2) Общий анализ программы; 3) Профилирование MPI-программы."
        },
        "rule_node_disbalance": {
            "index": 7,
            "name": "rule_node_disbalance",
            "is_enabled": 0,
            "public": 0,
            "description": "Данные мониторинга сильно отличаются для разных узлов -> скорее всего, имеет место разбалансировка. Правило имеет смысл учитывать, если не сработали более конкретные правила",
            "comment": "TODO",
            "src_file": "rules_integral_based.py",
            "group": "disbalance",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Разбалансировка нагрузки между узлами.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "general-aps,profiling-mpip",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения; 2) Общий анализ программы; 3) Профилирование MPI-программы."
        },
        "rule_high_la": {
            "index": 8,
            "name": "rule_high_la",
            "is_enabled": 1,
            "public": 0,
            "description": "Создано слишком большое количество потоков на узлах.",
            "comment": "LA > LOADAVG_HIGH",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3,
            "supposition": "Накладные расходны на организацию работы такого большого количества потоков могут быть существенными.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "thread-vtune",
            "old_text_recommendation": "Анализ многопоточной программы."
        },
        "rule_ml_low_job_activity": {
            "index": 9,
            "name": "rule_ml_low_job_activity",
            "is_enabled": 1,
            "public": 0,
            "description": "Число процессов, активно используюющих вычислительные ресурсы, слишком мало.",
            "comment": "Сработал тип Дениса low_job_activity.",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": "",
            "confidence": "",
            "criticalness": "",
            "supposition": "Вероятно, только очень небольшая доля процессов активно работает, остальные практически все время простаивают. Вероятно, требуется уменьшить число процессов либо оптимизировать распределение вычислительной нагрузки между узлами.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения; 2) Профилирование MPI-программы."
        },
        "rule_ml_stall": {
            "index": 10,
            "name": "rule_ml_stall",
            "is_enabled": 1,
            "public": 1,
            "description": "Согласно данным мониторинга, задача некоторое время была зависшей, однако затем ее выполнение продолжилось в нормальном режиме.",
            "comment": "Сработал тип Дениса stall.",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3,
            "supposition": "Задача некоторое время была зависшей, поэтому ее выполнение может быть некорректным.",
            "text_recommendation": "Рекомендуется проверить корректность запуска.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска."
        },
        "rule_ml_suspicious": {
            "index": 11,
            "name": "rule_ml_suspicious",
            "is_enabled": 1,
            "public": 1,
            "description": "Данная задача обладает подозрительно низкой эффективностью выполнения, по сравнению с остальными задачами на данном суперкомпьютере. Скорее всего, в задаче присутствуют существенные проблемы с эффективностью.",
            "comment": "Классификатор Дениса отметил данную задачу как подозрительную.",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3,
            "supposition": "Программа без видимых внешних причин работает недостаточно эффективно, по сравнению с остальными задачами на данном суперкомпьютере. На данном этапе недостаточно информации для определения причин данной неэффективности.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "general-aps",
            "old_text_recommendation": "Общий анализ программы."
        },
        "rule_low_ipc": {
            "index": 12,
            "name": "rule_low_ipc",
            "is_enabled": 0,
            "public": 0,
            "description": "Скорость выполнения инструкций слишком мала. При этом не наблюдается высокой внешней активности (расчетов на ГПУ или передачи данных по сети).",
            "comment": "thr_low_ipc AND class_not_comm AND thr_low_gpu_load",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Программа без видимых внешних причин работает недостаточно эффективно. На данном этапе недостаточно информации для определения причин данной неэффективности.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "general-aps",
            "old_text_recommendation": "Общий анализ программы."
        },
        "rule_ml_cold_start": {
            "index": 13,
            "name": "rule_ml_cold_start",
            "is_enabled": 0,
            "public": 0,
            "description": "Согласно данным мониторинга, активность задачи сразу после запуска была очень низкой.",
            "comment": "Сработал тип Дениса cold_start.",
            "src_file": "rules_integral_based.py",
            "group": "general_low_efficiency",
            "priority": 1,
            "confidence": 3,
            "criticalness": 3,
            "supposition": "Вероятно, процесс старта задачи занял продолжительное время (из-за внешних сбоев в системе или проблем в самой задаче).",
            "text_recommendation": "Рекомендуется проверить корректность запуска.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска."
        },
        "rule_cpu_gpu": {
            "index": 14,
            "name": "rule_cpu_gpu",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача слабо использует CPU при высокой загрузке GPU. ",
            "comment": "class_gpu_pure",
            "src_file": "rules_tag_based.py",
            "group": "gpu_based",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Можно попробовать одновременно загружать и CPU, и GPU.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "gpu-nvprof_basic",
            "old_text_recommendation": "Анализ работы с ускорителями, часть 1."
        },
        "rule_more_cpu_gpu": {
            "index": 15,
            "name": "rule_more_cpu_gpu",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача практически не использует CPU при высокой загрузке GPU.",
            "comment": "class_gpu_pure AND class_less_suspicious (без части про ГПУ)",
            "src_file": "rules_tag_based.py",
            "group": "gpu_based",
            "priority": 2,
            "confidence": 3,
            "criticalness": 4,
            "supposition": "Можно попробовать одновременно загружать и CPU, и GPU.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "gpu-nvprof_basic",
            "old_text_recommendation": "Анализ работы с ускорителями, часть 1."
        },
        "rule_irq_iowait": {
            "index": 16,
            "name": "rule_irq_iowait",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком высокая IRQ или IOWAIT загрузка.",
            "comment": "thr_high_cpu_irq OR thr_high_cpu_iowait",
            "src_file": "rules_integral_based.py",
            "group": "incorrect_behavior",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Вероятно, некорректный режим работы задачи.",
            "text_recommendation": "Рекомендуется проверить параметры запуска задачи.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить параметры запуска задачи."
        },
        "rule_mpi_disbalance": {
            "index": 17,
            "name": "rule_mpi_disbalance",
            "is_enabled": 1,
            "public": 1,
            "description": "Большой дислабанс на узлах между средним объемом передаваемых и получаемых данных по MPI сети.",
            "comment": "num_nodes > 1 AND NOT thr_low_ib_mpi AND (xmit_mpi/recv_data > MPI_DISBALANCE) OR (xmit_mpi/recv_data  < 1.0/MPI_DISBALANCE)",
            "src_file": "rules_integral_based.py",
            "group": "incorrect_behavior",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Вероятно, некорректное использование MPI.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_mpi_high_OS_jitter": {
            "index": 18,
            "name": "rule_mpi_high_OS_jitter",
            "is_enabled": 1,
            "public": 1,
            "description": "Системные вызовы занимают слишком много времени, при этом интенсивность использования сети низкая.",
            "comment": "thr_low_ib AND thr_high_cpu_system",
            "src_file": "rules_integral_based.py",
            "group": "incorrect_behavior",
            "priority": 1,
            "confidence": 1,
            "criticalness": 1,
            "supposition": "Вероятно, шумы ОС слишком велики.",
            "text_recommendation": "Рекомендуется проверить корректность запуска задачи. Если запуск корректен, стоит сообщить администратору системы.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется проверить корректность запуска задачи. Если запуск корректен, стоит сообщить администратору системы."
        },
        "rule_nice": {
            "index": 19,
            "name": "rule_nice",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком высокая NICE загрузка.",
            "comment": "thr_high_cpu_nice",
            "src_file": "rules_integral_based.py",
            "group": "incorrect_behavior",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Используются процессы с низким приоритетом.",
            "text_recommendation": "Рекомендуется перезапустить задачу с нормальным приоритетом.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется перезапустить задачу с нормальным приоритетом."
        },
        "rule_mpi_bad_locality": {
            "index": 20,
            "name": "rule_mpi_bad_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача активно работает с MPI сетью, но сетевая локальность плохая (узлы СК расположены далеко друг от друга).",
            "comment": "num_nodes > 1 AND ((thr_high_ib_mpi OR thr_high_ib_fs) AND NOT thr_low_network_sparsity) OR (NOT (thr_low_ib_mpi OR thr_low_ib_fs) AND thr_high_network_sparsity)))",
            "src_file": "rules_integral_based.py",
            "group": "inefficient_mpi",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "При запуске задачи менеджером ресурсов был выбран неудачный набор узлов. Рекомендуется при необходимости явно указывать узлы, на которых будет производиться запуск проргаммы, либо пытаться оптимизировать работу с MPI.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_mpi_high_system": {
            "index": 21,
            "name": "rule_mpi_high_system",
            "is_enabled": 1,
            "public": 1,
            "description": "Работа с коммуникационнной сетью занимает слишком много системных ресурсов.",
            "comment": "num_nodes > 1 AND thr_low_ib AND thr_high_cpu_system",
            "src_file": "rules_integral_based.py",
            "group": "inefficient_mpi",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Вероятно, работа с MPI сетью или сетью для ФС организована неэффективно.",
            "text_recommendation": "Попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "profiling-mpip,io-vtune",
            "old_text_recommendation": "1) Профилирование MPI-программы (если проблема с MPI сетью); 2) Анализ ввода/вывода (если проблема с сетью для ФС)."
        },
        "rule_mpi_issues": {
            "index": 22,
            "name": "rule_mpi_issues",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность использования вычислительных ресурсов при высокой интенсивности использования MPI сети.",
            "comment": "class_less_suspicious AND (class_comm_data OR class_comm_pckts)",
            "src_file": "rules_tag_based.py",
            "group": "inefficient_mpi",
            "priority": 1,
            "confidence": 3,
            "criticalness": 4,
            "supposition": "Выполнение MPI операций, вероятно, занимает слишком много времени, требуется оптимизация.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_mpi_many_operations": {
            "index": 23,
            "name": "rule_mpi_many_operations",
            "is_enabled": 0,
            "public": 0,
            "description": "Низкая интенсивность использования MPI сети, однако число MPI операций велико.",
            "comment": "TODO",
            "src_file": "rules_integral_based.py",
            "group": "inefficient_mpi",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Вероятно, работа с MPI организована неэффективно.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_fs_small_packets": {
            "index": 24,
            "name": "rule_fs_small_packets",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком маленькие средние размеры ФС IB пакетов при достаточно высокой интенсивности использования коммуникационной сети.",
            "comment": "num_nodes > 1 AND NOT thr_low_ib_fs AND (avg_fs_xmit_packets < FS_SMALL_PACKETS OR avg_fs_rcv_packets < FS_SMALL_PACKETS)",
            "src_file": "rules_integral_based.py",
            "group": "inefficient_network_packets",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Накладные расходы на передачу данных для чтения/записи в файловую систему могут быть существенными.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "io-vtune",
            "old_text_recommendation": "Анализ ввода/вывода."
        },
        "rule_mpi_packets": {
            "index": 25,
            "name": "rule_mpi_packets",
            "is_enabled": 1,
            "public": 1,
            "description": "Размер MPI пакетов слишком маленький.",
            "comment": "class_less_suspicious AND NOT class_comm_data AND class_comm_pckts",
            "src_file": "rules_tag_based.py",
            "group": "inefficient_network_packets",
            "priority": 1,
            "confidence": 3,
            "criticalness": 4,
            "supposition": "Накладные расходы на передачу MPI сообщений могут быть существенными.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_mpi_small_packets": {
            "index": 26,
            "name": "rule_mpi_small_packets",
            "is_enabled": 1,
            "public": 1,
            "description": "Слишком маленькие средние размеры MPI IB пакетов при достаточно высокой интенсивности использования коммуникационной сети.",
            "comment": "num_nodes > 1 AND NOT thr_low_ib_mpi AND (avg_mpi_xmit_packets < MPI_SMALL_PACKETS OR avg_mpi_rcv_packets < MPI_SMALL_PACKETS)",
            "src_file": "rules_integral_based.py",
            "group": "inefficient_network_packets",
            "priority": 2,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Накладные расходы на передачу MPI сообщений могут быть существенными.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "profiling-mpip",
            "old_text_recommendation": "Профилирование MPI-программы."
        },
        "rule_normal_serial": {
            "index": 27,
            "name": "rule_normal_serial",
            "is_enabled": 1,
            "public": 1,
            "description": "Последовательная задача",
            "comment": "class_serial",
            "src_file": "rules_tag_based.py",
            "group": "serial_like_jobs",
            "priority": 1,
            "confidence": 2,
            "criticalness": 4,
            "supposition": "Для работы на суперкомпьютере стоит распараллелить данную задачу.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "general-aps",
            "old_text_recommendation": "Общий анализ программы."
        },
        "rule_one_active_process": {
            "index": 28,
            "name": "rule_one_active_process",
            "is_enabled": 1,
            "public": 1,
            "description": "В даной задаче обнаружен только 1 активный процесс на узел, при этом интенсивность использования памяти, GPU или сети невысока.",
            "comment": "not class_comm_data AND NOT thr_high_gpu_load AND (SERIAL_LA_MIN < loadavg.avg < SERIAL_LA_MAX) AND (NOT thr_high_mem_load AND not thr_high_mem_store)",
            "src_file": "rules_integral_based.py",
            "group": "serial_like_jobs",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Вероятно, при запуске задачи указывается размещение 1 процесса на узел.",
            "text_recommendation": "Рекомендуется запускать с большим числом процессов на узел.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется запускать с большим числом процессов на узел."
        },
        "rule_bad_locality": {
            "index": 29,
            "name": "rule_bad_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность использования вычислительных ресурсов при низкой локальности обращений в память.",
            "comment": "class_less_suspicious AND (class_not_comm OR class_serial OR class_single) AND (class_bad_locality OR class_weird_locality)  ",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 1,
            "confidence": 2,
            "criticalness": 4,
            "supposition": "Работы с памятью, вероятно, организована неэффективно, требуется оптимизация.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "mem_eff-valgrind",
            "old_text_recommendation": "Анализ эффективности работы с памятью."
        },
        "rule_bad_mem": {
            "index": 30,
            "name": "rule_bad_mem",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность использования вычислительных ресурсов при высокой интенсивности работы с памятью.",
            "comment": "class_less_suspicious AND (class_not_comm OR class_serial OR class_single) AND class_data_intensive",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 1,
            "confidence": 2,
            "criticalness": 4,
            "supposition": "Работы с памятью, вероятно, занимает слишком много времени, требуется оптимизация.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "mem_eff-valgrind",
            "old_text_recommendation": "Анализ эффективности работы с памятью."
        },
        "rule_cache": {
            "index": 31,
            "name": "rule_cache",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность работы задачи при высокой интенсивности работы с памятью и низкой локальности обращений в память.",
            "comment": "class_less_suspicious AND (class_not_comm OR class_serial OR class_single) AND class_data_intensive AND (class_bad_locality OR class_weird_locality)  ",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 2,
            "confidence": 3,
            "criticalness": 4,
            "supposition": "Работы с памятью, вероятно, занимает слишком много времени и организована неэффективно, требуется оптимизация.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "mem_eff-valgrind",
            "old_text_recommendation": "Анализ эффективности работы с памятью."
        },
        "rule_interleave": {
            "index": 32,
            "name": "rule_interleave",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность работы задачи при высокой интенсивности работы с памятью и высокой локальности обращений в память.",
            "comment": "class_less_suspicious AND (class_not_comm OR class_serial OR class_single) AND class_data_intensive AND class_good_locality ",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 2,
            "confidence": 2,
            "criticalness": 4,
            "supposition": "Работы с памятью занимает слишком много времени, но организована эффективно. Можно попробовать совмещать обработку данных с остальной работой в задаче (передачей данных или выполнением вычислений).",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "mem_eff-valgrind",
            "old_text_recommendation": "Анализ эффективности работы с памятью."
        },
        "rule_locality": {
            "index": 33,
            "name": "rule_locality",
            "is_enabled": 1,
            "public": 1,
            "description": "Высокая интенсивность работы с памятью при низкой локальности обращений в память.",
            "comment": "class_data_intensive AND class_bad_locality",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 1,
            "confidence": 2,
            "criticalness": 3,
            "supposition": "Работы с памятью, вероятно, организована неэффективно, требуется оптимизация.",
            "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
            "module_recommendation": "mem_eff-valgrind",
            "old_text_recommendation": "Анализ эффективности работы с памятью."
        },
        "rule_not_effective": {
            "index": 34,
            "name": "rule_not_effective",
            "is_enabled": 1,
            "public": 1,
            "description": "Низкая активность использования всех доступных ресурсов (процессоров, памяти, коммуникационной сети, графических ускорителей).",
            "comment": "class_less_suspicious AND (class_not_comm OR class_serial OR class_single) AND NOT class_data_intensive",
            "src_file": "rules_tag_based.py",
            "group": "suspicious_and_not_communicative",
            "priority": 3,
            "confidence": 3,
            "criticalness": 4,
            "supposition": "Причина низкой эффективности не обнаружена, требуется общий анализ.",
            "text_recommendation": "Стоит изучить поведение приложения во время выполнения, см. ссылку ниже \"Более подробное описание\". Также попробуйте выполнить следующие типы детального анализа:",
            "module_recommendation": "general-aps,profiling-mpip",
            "old_text_recommendation": "1) Анализ динамики выполнения приложения;2) Общий анализ программы (если нет MPI);3) Профилирование MPI-программы (если MPI есть)."
        },
        "rule_wrong_partition_gpu": {
            "index": 35,
            "name": "rule_wrong_partition_gpu",
            "is_enabled": 1,
            "public": 1,
            "description": "Задача запущена в разделе для GPU задач, однако практически не использует графические процессоры.",
            "comment": "partition in GPU_PARTITIONS AND avg_gpu_load < GPU_LOAD_LOW",
            "src_file": "rules_integral_based.py",
            "group": "wrong_partition",
            "priority": 1,
            "confidence": 4,
            "criticalness": 4,
            "supposition": "Неправильно выбран раздел для задачи.",
            "text_recommendation": "Рекомендуется сменить раздел.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется сменить раздел."
        },
        "rule_wrong_partition_io": {
            "index": 36,
            "name": "rule_wrong_partition_io",
            "is_enabled": 0,
            "public": 0,
            "description": "Задача запущена в разделе для задач с невысокими требованиям к скорости вовода/вывода, однако в этой задаче интенсивность ввода/вывода велика.",
            "comment": "not thr_low_ib_fs AND partition in LOW_IO_PARTITIONS",
            "src_file": "rules_integral_based.py",
            "group": "wrong_partition",
            "priority": 1,
            "confidence": 4,
            "criticalness": 4,
            "supposition": "Неправильно выбран раздел для задачи.",
            "text_recommendation": "Рекомендуется сменить раздел.",
            "module_recommendation": "---",
            "old_text_recommendation": "Рекомендуется сменить раздел."
        }
    },
    "detailed_analysis_types": {
        "profiling-mpip": {
            "index": 1,
            "name": "profiling-mpip",
            "type_text": "Профилирование MPI-программы",
            "type_name": "profiling",
            "soft_text": "mpiP",
            "soft_name": "mpip",
            "manual": "1. Зайти на Ломоносов-2 \n2. Загрузить модуль Slurm:\n    module add slurm\n3. (Опционально) Скомпилировать программу, указав ключ для сбора дебаг информации (обычно -g).\n4. Запустить программу с предзагрузкой библиотеки анализа:\n    LD_PRELOAD=/opt/software/mpip/libmpiP.so sbatch <slurm параметры> <вызов программы>\n5. В папке появится текстовый файл с результатами работы mpiP \"<имя_исполняемого файла>.<число процессов>.<набор цифр>.mpiP\", можно посмотреть его в обычном редакторе.\n\nПодробную инструкцию по анализу полученных результатов mpiP можно прочитать <a href=\"http://mpip.sourceforge.net/#mpiP_Output\">по этой ссылке</a>."
        },
        "tracing-itac": {
            "index": 2,
            "name": "tracing-itac",
            "type_text": "Трассировка MPI-программы",
            "type_name": "tracing",
            "soft_text": "Intel ITAC",
            "soft_name": "itac",
            "manual": "1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды (да, команду source надо выполнить дважды):\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n    module add openmpi\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n3. Скомпилировать свою программу с mpicc/mpicxx\n4. создать файл run.sbatch с содержимым(без кавычек):\n    #!/bin/bash\n    mpirun -trace <вызов программы>\n5. Запустить программу:\n    sbatch <slurm параметры> run.sbatch\n6. В папке появится трасса запуска, можно посмотреть её, выполнив:\n    traceanalyzer <имя трассы>.stf\n\nПодробную инструкцию по работе с Intel ITAC и анализу полученных результатов можно прочитать <a href=\"https://software.intel.com/en-us/ita-user-and-reference-guide\">по этой ссылке</a>."
        },
        "thread-vtune": {
            "index": 3,
            "name": "thread-vtune",
            "type_text": "Анализ многопоточной программы",
            "type_name": "thread",
            "soft_text": "VTune Amplifier",
            "soft_name": "vtune",
            "manual": "В случае MPI программы:\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n    module add openmpi\n3. Скомпилировать свою программу с mpicc/mpicxx (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch <slurm параметры> ompi amplxe-cl -r vtune-result -collect threading -- <вызов программы>\n5. Появится папка вида vtune-result.n48627.10p.parallel.ru, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n  5в. Изучить выдачу Summary, при необходимости посмотреть интересующие детали.\n\nВ случае OpenMP программы (без использования MPI):\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n3. Скомпилировать свою программу с icc (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch <slurm параметры> run amplxe-cl -r vtune-result -collect threading -- <вызов программы>\n5. Появится папка вида vtune-result, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n  5в. Изучить выдачу Summary, при необходимости посмотреть интересующие детали.\n\nПодробную инструкцию по анализу эффективности организации OpenMP потоков в программах с помощью Intel VTune можно прочитать <a href=\"https://software.intel.com/en-us/vtune-cookbook-openmp-code-analysis-method\">по этой ссылке</a>."
        },
        "mem_eff-valgrind": {
            "index": 4,
            "name": "mem_eff-valgrind",
            "type_text": "Анализ эффективности работы с памятью",
            "type_name": "mem_eff",
            "soft_text": "Valgrind (Callgrind)",
            "soft_name": "valgrind",
            "manual": "1. Зайти на Ломоносов-2 \n2. Загрузить нужные модули:\n    module add slurm valgrind/3.12.0\n3. Запустить анализируемую программу с помощью команды:\n    sbatch <slurm параметры> valgrind --tool=callgrind --cacheuse=yes --trace-children=yes --callgrind-out-file=\"callgrind_perf_%p\" <вызов программы>\n4. В папке появятся файлы \"valgrind_perf_%p\", по одному на каждый процесс.\n5. Запустить команду:\n    callgrind_annotate callgrind_perf_<выбранный процесс> > callgrind_output\n6. Файл callgrind_output является текстовым, можно посмотреть его в обычном редакторе.\n\nПодробную инструкцию по анализу полученных результатов Callgrind можно прочитать <a href=\"https://valgrind.org/docs/manual/cg-manual.html#cg-manual.the-output-preamble\">по этой ссылке</a>. Callgrind использует в работе Cachegrind, поэтому приведена ссылка на его инструкцию."
        },
        "mem_corr-valgrind": {
            "index": 5,
            "name": "mem_corr-valgrind",
            "type_text": "Анализ корректности работы с памятью",
            "type_name": "mem_corr",
            "soft_text": "Valgrind (Memcheck)",
            "soft_name": "valgrind",
            "manual": "1. Зайти на Ломоносов-2 \n2. Загрузить нужные модули:\n    module add slurm valgrind/3.12.0\n3. Запустить анализируемую программу с помощью команды:\n    sbatch <slurm параметры> valgrind --log-file=\"valgrind_check_%p\"  --trace-children=yes --tool=memcheck --leak-check=full --show-leak-kinds=all <вызов программы>\n4. В папке появятся файлы \"valgrind_check_%p\", по одному на каждый процесс, можно посмотреть их в обычном редакторе.\n\nПодробную инструкцию по анализу полученных результатов Memcheck можно прочитать <a href=\"https://www.valgrind.org/docs/manual/mc-manual.html#mc-manual.errormsgs\">по этой ссылке</a>."
        },
        "io-vtune": {
            "index": 6,
            "name": "io-vtune",
            "type_text": "Анализ ввода/вывода",
            "type_name": "io",
            "soft_text": "VTune Amplifier",
            "soft_name": "vtune",
            "manual": "В случае MPI программы:\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n    module add openmpi\n3. Скомпилировать свою программу с mpicc/mpicxx (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch -C nomonitoring <slurm параметры> ompi amplxe-cl -r vtune-result -collect io -knob kernel-stack=false  -- <вызов программы>\n5. Появится папка вида vtune-result.n48627.10p.parallel.ru, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n\nВ случае последовательной/OpenMP программы:\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n3. Скомпилировать свою программу с icc (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch -C nomonitoring <slurm параметры> run amplxe-cl -r vtune-result -collect io -knob kernel-stack=false -- <вызов программы>\n5. Появится папка вида vtune-result, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n\nПодробную инструкцию по анализу I/O в Intel VTune можно прочитать <a href=\"https://software.intel.com/en-us/vtune-help-disk-input-and-output-analysis\">по этой ссылке</a>."
        },
        "low_level-vtune": {
            "index": 7,
            "name": "low_level-vtune",
            "type_text": "Низкоуровневый анализ",
            "type_name": "low_level",
            "soft_text": "VTune Amplifier",
            "soft_name": "vtune",
            "manual": "В случае MPI программы:\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n    module add openmpi\n3. Скомпилировать свою программу с mpicc/mpicxx (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch -C nomonitoring <slurm параметры> ompi amplxe-cl -r vtune-result -collect hpc-performance -- <вызов программы>\n5. Появится папка вида vtune-result.n48627.10p.parallel.ru, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n  5в. Выбрать вкладку \"Microarchitecture exploration\" наверху в появившемся окне\n\nВ случае последовательной/OpenMP программы:\n1. Зайти на Ломоносов-2 с пробросом X-server (ssh -X ...)\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/parallel_studio_xe_2019.5.075/bin/psxevars.sh\n3. Скомпилировать свою программу с icc (указав ключ для сбора дебаг информации -g)\n4. Запустить программу:\n    sbatch -C nomonitoring <slurm параметры> run amplxe-cl -r vtune-result -collect hpc-performance -- <вызов программы>\n5. Появится папка вида vtune-result, в ней находится собранная трасса. Её можно посмотреть в визуальном интерфейсе VTune. Для этого надо:\n  5а. Выполнить команду:\n        amplxe-gui &\n  5б. Открыть собранную трассу (выбрать Open result и указать полученный файл *.amplxe)\n  5в. Выбрать вкладку \"Microarchitecture exploration\" наверху в появившемся окне\n\n\nПодробную инструкцию по работе с Top-down подходом в Intel VTune можно прочитать <a href=\"https://software.intel.com/en-us/vtune-cookbook-top-down-microarchitecture-analysis-method\">по этой ссылке</a>."
        },
        "gpu-nvprof_basic": {
            "index": 8,
            "name": "gpu-nvprof_basic",
            "type_text": "Анализ работы с ускорителями, часть 1",
            "type_name": "gpu",
            "soft_text": "nvprof",
            "soft_name": "nvprof_basic",
            "manual": "1. Зайти на Ломоносов-2 \n2. Загрузить нужные модули:\n    module add slurm cuda\n3. Запустить программу с помощью nvprof:\n    sbatch ... nvprof --csv --log-file \"nvprof_%p\" <вызов программы>\n4. Запустить команду для объединения файлов выдачи (убедитесь, что не будут использованы файлы от предыдущих запусков):\n    cat nvprof_*  > nvprof_all\n\nПолную инструкцию по анализу приложений с помощью nvprof можно прочитать <a href=\"https://docs.nvidia.com/cuda/profiler-users-guide/index.html#nvprof-overview\">по этой ссылке</a>."
        },
        "gpu-nvprof": {
            "index": 9,
            "name": "gpu-nvprof",
            "type_text": "Анализ работы с ускорителями, часть 2",
            "type_name": "gpu",
            "soft_text": "nvprof",
            "soft_name": "nvprof",
            "manual": "1. Зайти на Ломоносов-2 \n2. Загрузить нужные модули:\n    module add slurm cuda\n3. Запустить программу с помощью nvprof:\n    sbatch ... nvprof --log-file \"nvprof_%p\" --csv --metrics sm_efficiency,sm_activity,executed_ipc,ipc,achieved_occupancy,dram_utilization,l2_utilization,flop_sp_efficiency,flop_dp_efficiency,gst_efficiency,gld_efficiency,shared_efficiency,shared_utilization,warp_execution_efficiency <вызов программы>\n4. Запустить команду для объединения файлов выдачи (убедитесь, что не будут использованы файлы от предыдущих запусков):\n    cat nvprof_*  > nvprof_all\n\nПолную инструкцию по анализу приложений с помощью nvprof можно прочитать <a href=\"https://docs.nvidia.com/cuda/profiler-users-guide/index.html#nvprof-overview\">по этой ссылке</a>."
        },
        "general-aps": {
            "index": 10,
            "name": "general-aps",
            "type_text": "Общий анализ программы",
            "type_name": "general",
            "soft_text": "Intel APS",
            "soft_name": "aps",
            "manual": "В случае MPI программы:\n1. Зайти на Ломоносов-2\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/vtune2019/performance_snapshots_2019.3.0.590814/apsvars.sh\n    module add openmpi\n    export APS_DIR=`mktemp -d -p . -t 'aps-result-XXXX'`\n3. Запустить задачу, используя aps перед вызовом программы:\n    sbatch -C nomonitoring <slurm параметры> ompi aps -r=$APS_DIR -c=all <вызов программы>\n4. Выполнить команды:\n    aps --report=$APS_DIR > ${APS_DIR}_report\n5. В текущей папке будет создан файл вида aps_report_20200402_140923.html, можно скачать его к себе и открыть в любом браузере, или воспользоваться средствами анализа в Octoshell. Также можно посмотреть текстовую версию отчета в файле ${APS_DIR}_report.\n\nВ случае последовательной/OpenMP программы:\n1. Зайти на Ломоносов-2\n2. Выполнить команды:\n    module add slurm\n    source /opt/intel/vtune2019/performance_snapshots_2019.3.0.590814/apsvars.sh\n    export APS_DIR=`mktemp -d -p . -t 'aps-result-XXXX'`\n3. Запустить задачу, используя aps перед вызовом программы:\n    sbatch -C nomonitoring <slurm параметры> run aps -r=$APS_DIR -c=all <вызов программы>\n4. Выполнить команды:\n    aps --report=$APS_DIR > ${APS_DIR}_report\n5. В текущей папке будет создан файл вида aps_report_20200402_140923.html, можно скачать его к себе и открыть в любом браузере, или воспользоваться средствами анализа в Octoshell. Также можно посмотреть текстовую версию отчета в файле ${APS_DIR}_report.\n\nПодробную инструкцию по работе с Intel APS и анализу полученных результатов можно прочитать <a href=\"https://software.intel.com/en-us/node/836966\">по этой ссылке</a>.\n"
        }
    },
    "detailed": {
        "gpu-nvprof_basic": {
            "nvprof_slow_host_mem": {
                "index": 1,
                "name": "nvprof_slow_host_mem",
                "is_enabled": 1,
                "public": 1,
                "description": "Передача данных на ГПУ занимает слишком много времени по сравнению с временем счета на ГПУ.",
                "comment": "transfer_time > kernel_time \nTODO показывать самые долгие ядра",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 4,
                "criticalness": 4,
                "supposition": "Возможно, текущая реализация не подходит для ГПУ.",
                "text_recommendation": "Следует уменьшить объем данных, копируемых между хостом и ГПУ.",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует уменьшить объем данных, копируемых между хостом и ГПУ."
            },
            "nvprof_good_host_mem": {
                "index": 2,
                "name": "nvprof_good_host_mem",
                "is_enabled": 1,
                "public": 1,
                "description": "Анализ не показал проблем с копированием данных между хостом и ГПУ. ",
                "comment": "kernel_time > transfer_time \nTODO показывать самые долгие ядра",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 3,
                "criticalness": 1,
                "supposition": "Возможно, анализ вычислений на ГПУ поможет выявить проблемы с эффективостью.",
                "text_recommendation": "Попробуйте выполнить следующие типы детального анализа:",
                "module_recommendation": "gpu-nvprof",
                "old_text_recommendation": "Рекомендуется провести анализ эффективности вычислений на ГПУ."
            }
        },
        "gpu-nvprof": {
            "nvprof_low_sm_activity": {
                "index": 1,
                "name": "nvprof_low_sm_activity",
                "is_enabled": 1,
                "public": 1,
                "description": "Мультипроцессор (SM) часто простаивает.",
                "comment": "metric < 0.8",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Возможно, сетка потоков выбрана неэффективным образом.",
                "text_recommendation": "Следует проверить конфигурацию потоков. Более подробную информацию можно получить, например, с помощью инструмента NVIDIA Nsight.",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует проверить конфигурацию потоков."
            },
            "nvprof_low_achieved_occupancy": {
                "index": 2,
                "name": "nvprof_low_achieved_occupancy",
                "is_enabled": 1,
                "public": 1,
                "description": "Мультипроцессору (SM) не хватает ресурсов для исполнения ядер.",
                "comment": "metric < 0.8",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "ГПУ не может параллельно исполнить все блоки потоков в текущей конфигурации.",
                "text_recommendation": "Следует изменить размер блока или потребляемые ими ресурсы (регистры и/или разделямую память). Более подробную информацию можно получить, например, с помощью инструмента NVIDIA Nsight.",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует изменить размер блока или потребляемые ими ресурсы (регистры и/или разделямую память)."
            },
            "nvprof_low_flop_efficiency": {
                "index": 3,
                "name": "nvprof_low_flop_efficiency",
                "is_enabled": 1,
                "public": 1,
                "description": "Производительность ГПУ на операциях с плавающей точкой очень низка.",
                "comment": "sp + dp < 0.1",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 3,
                "criticalness": 4,
                "supposition": "Программа работает очень неэффективно (в случае если она активно использует операции с плавающей точкой). Либо программа практически не использует операции с плавающей точкой в принципе.",
                "text_recommendation": "На данном этапе причина столь низкой эффективности непонятна, необходим более детальный анализ (например, с помощью инструмента NVIDIA NSight). В случае если данная программа практически не использует операции с плавающей точкой, данный пункт стоит пропустить. ",
                "module_recommendation": "---",
                "old_text_recommendation": "На данном этапе причина столь низкой эффективности непонятна, необходим более детальный анализ (например, с помощью инструмента NSight).\nВ случае если данная программа практически не использует операции с плавающей точкой, данный пункт стоит пропустить. "
            },
            "nvprof_low_global_mem_efficiency": {
                "index": 4,
                "name": "nvprof_low_global_mem_efficiency",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружена низкая эффективность работы с глобальной памятью.",
                "comment": "gst_e < 0.6 or gld_e < 0.6",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 3,
                "criticalness": 2,
                "supposition": "Шаблон обращений соседних потоков к глобальной памяти организован неэффективно - зачастую не срабатывает механизм coalescing.",
                "text_recommendation": "Следует проверить (например, с помощью NVIDIA Nsight) соответствие шаблона обращения в глобальную память архитектуре GPU (с учетом механизма coalescing).",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует проверить соответствие шаблона обращения в глобальную память архитектуре ГПУ (с учетом механизма coalescing)."
            },
            "nvprof_low_shared_efficiency": {
                "index": 5,
                "name": "nvprof_low_shared_efficiency",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружена низкая эффективность работы с разделяемой памятью.",
                "comment": "metric < 0.6 and metric > 0.01",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 3,
                "criticalness": 2,
                "supposition": "При работе с разделяемой памятью скорее всего происходит большое число конфликтов при обращении к одним и тем же банкам памяти.",
                "text_recommendation": "Следует проверить  (например, с помощью NVIDIA Nsight) соответствие шаблона обращения в разделяемую память GPU (с учётом механизма разделения памяти на банки).",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует проверить соответствие шаблона обращения в разделяемую память ГПУ (с учётом механизма разделения памяти на банки)."
            },
            "nvprof_low_warp_execution_efficiency": {
                "index": 6,
                "name": "nvprof_low_warp_execution_efficiency",
                "is_enabled": 1,
                "public": 1,
                "description": "Потоки в варпе часто простаивают из-за ветвлений в условных переходах.",
                "comment": "metric < 0.6",
                "src_file": "nvprof.py",
                "group": "nvprof",
                "priority": 1,
                "confidence": 3,
                "criticalness": 2,
                "supposition": "В силу SIMD-природы варпа, в рамках одного варпа все потоки одновременно выполняют одну ветвь. При этом если части потоков требуется выполнение другой ветви, то эти потоки будут простаивать.\nПоэтому в данной программе наличие большого числа ветвлений, по всей видимости, приводит к простою существенной части ГПУ ресурсов.",
                "text_recommendation": "Следует уменьшить число ветвлений среди потоков одного варпа. Более подробную информацию можно получить, например, с помощью инструмента NVIDIA Nsight.",
                "module_recommendation": "---",
                "old_text_recommendation": "Следует уменьшить число ветвлений среди потоков одного варпа."
            },
            "todo_1": {
                "index": 7,
                "name": "todo_1",
                "is_enabled": 0,
                "public": 0,
                "description": ".",
                "comment": "TODO: Добавить roofline от Ильи",
                "src_file": ".",
                "group": ".",
                "priority": 0,
                "confidence": 0,
                "criticalness": 0,
                "supposition": ".",
                "text_recommendation": ".",
                "module_recommendation": ".",
                "old_text_recommendation": ""
            }
        },
        "profiling-mpip": {
            "mpip_low_pe": {
                "index": 1,
                "name": "mpip_low_pe",
                "is_enabled": 1,
                "public": 1,
                "description": "Задача обладает низкой параллельной эффективностью (т.е. неэффективно разделены вычисления между процессами и/или неэффективно выполняется обмен данными).",
                "comment": "PoP метрика PE меньше порога.",
                "src_file": "mpip.py",
                "group": "mpip_pop",
                "priority": 1,
                "confidence": 3,
                "criticalness": 2,
                "supposition": "Вероятно, работа с MPI организована неэффективно.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "tracing-itac",
                "old_text_recommendation": "Анализ MPI программ -> Трассировка"
            },
            "mpip_low_lb": {
                "index": 2,
                "name": "mpip_low_lb",
                "is_enabled": 1,
                "public": 1,
                "description": "Присутствует дисбаланс вычислительной нагрузки между процессами.",
                "comment": "PoP метрика LB меньше порога.",
                "src_file": "mpip.py",
                "group": "mpip_pop",
                "priority": 2,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Разбалансировка нагрузки между узлами.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "tracing-itac",
                "old_text_recommendation": "Анализ MPI программ -> Трассировка"
            },
            "mpip_low_comme": {
                "index": 3,
                "name": "mpip_low_comme",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе много времени тратится на выполнение обмена данными, во время которого отсутствует полезная вычислительная нагрузка.",
                "comment": "PoP метрика CommE меньше порога.",
                "src_file": "mpip.py",
                "group": "mpip_pop",
                "priority": 2,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Выполнение MPI операций, вероятно, занимает слишком много времени, требуется оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "tracing-itac",
                "old_text_recommendation": "Анализ MPI программ -> Трассировка"
            },
            "mpip_callsite_disbalance_single": {
                "index": 4,
                "name": "mpip_callsite_disbalance_single",
                "is_enabled": 1,
                "public": 1,
                "description": "Время выполнения некоторых MPI инструкций существено отличается для разных вызовов на одном процессе",
                "comment": "callsite_disbalance_single > 5",
                "src_file": "mpip.py",
                "group": "mpip_general",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Вероятно, присутствует разбалансировка вычислительной нагрузки между процессами, что приводит к простою некоторых процессов при выполнении MPI-операций.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "tracing-itac",
                "old_text_recommendation": "Анализ MPI программ -> Трассировка"
            },
            "mpip_callsite_disbalance_multi": {
                "index": 5,
                "name": "mpip_callsite_disbalance_multi",
                "is_enabled": 1,
                "public": 1,
                "description": "Время выполнения некоторых MPI инструкций существено отличается для среди разных процессов",
                "comment": "callsite_disbalance_multi > 5",
                "src_file": "mpip.py",
                "group": "mpip_general",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Вероятно, присутствует разбалансировка вычислительной нагрузки между процессами, что приводит к простою некоторых процессов при выполнении MPI-операций.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "tracing-itac",
                "old_text_recommendation": "Анализ MPI программ -> Трассировка"
            }
        },
        "mem_corr-valgrind": {
            "valgrind_mem_errors": {
                "index": 1,
                "name": "valgrind_mem_errors",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружены утечки памяти.",
                "comment": "Leak_DefinitelyLost + Leak_IndirectlyLost > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Часть выделенной в программе памяти не освобождается.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_uninit_value": {
                "index": 2,
                "name": "valgrind_mem_uninit_value",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружено использование неинициализированных переменных (ошибки типа UninitValue).",
                "comment": "UninitValue > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_uninit_condition": {
                "index": 3,
                "name": "valgrind_mem_uninit_condition",
                "is_enabled": 1,
                "public": 1,
                "description": "Условный переход или другое действие зависит от значения неиницализированной переменной (ошибки типа UninitCondition).",
                "comment": "UninitCondition > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_syscall_param": {
                "index": 4,
                "name": "valgrind_mem_syscall_param",
                "is_enabled": 1,
                "public": 1,
                "description": "Параметры системного вызова содержат неициниализированные данные (ошибки типа SyscallParam).",
                "comment": "SyscallParam > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_client_check": {
                "index": 5,
                "name": "valgrind_mem_client_check",
                "is_enabled": 1,
                "public": 1,
                "description": "Были обнаружены  неадресуемые/неинициализированные данные (ошибки типа ClientCheck).",
                "comment": "ClientCheck > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_invalid_free": {
                "index": 6,
                "name": "valgrind_mem_invalid_free",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе присутствуют некорректные вызовы free() / delete / delete[] / realloc() (ошибка типа InvalidFree).",
                "comment": "InvalidFree > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_mismatched_free": {
                "index": 7,
                "name": "valgrind_mem_mismatched_free",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружены несоответствующие вызовы free() / delete / delete [] (ошибки типа MismatchedFree). Например, освобождение памяти с помощью вызова free при условии, что данные были запрошены с помощью вызова new[], приведет к появлению такой ошибки.",
                "comment": "MismatchedFree > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_invalid_read": {
                "index": 8,
                "name": "valgrind_mem_invalid_read",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружены попытки чтения данных из некорректного участка памяти (ошибки типа InvalidRead).",
                "comment": "InvalidRead > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_invalid_write": {
                "index": 9,
                "name": "valgrind_mem_invalid_write",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружены попытки записи данных в некорректный участок памяти (ошибки типа InvalidWrite).",
                "comment": "InvalidWrite > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_invalid_jump": {
                "index": 10,
                "name": "valgrind_mem_invalid_jump",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружены попытки перехода в некорректный участок памяти (ошибки типа InvalidJump).",
                "comment": "InvalidJump > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_overlap": {
                "index": 11,
                "name": "valgrind_mem_overlap",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружены операции копирования, в которых копируемый и целевой участки данных пересекаются (ошибки типа Overlap).",
                "comment": "Overlap > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_invalid_mem_pool": {
                "index": 12,
                "name": "valgrind_mem_invalid_mem_pool",
                "is_enabled": 1,
                "public": 1,
                "description": "Обнаружен некорректный адрес пула памяти (ошибки типа InvalidMemPool).",
                "comment": "InvalidMemPool > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            },
            "valgrind_mem_fishy_value": {
                "index": 13,
                "name": "valgrind_mem_fishy_value",
                "is_enabled": 1,
                "public": 1,
                "description": "В функциях выделения памяти обнаружены подозрительные аргументы (ошибки типа FishyValue). Например, указание отрицательного или очень большого значения для функции malloc приведет к появлению такого сообщения.",
                "comment": "FishyValue > 0",
                "src_file": "valgrind.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 5,
                "criticalness": 3,
                "supposition": "Программа некорректно работает с памятью.",
                "text_recommendation": "Рекомендуется детально изучить файл выдачи от Memcheck, который был получен при выполнении анализа программы. Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. ",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изучить детальный файл выдачи от Memcheck (представлен ниже). Если этого недостаточно, рекомендуется воспользоваться другими инструментами анализа, например, Intel Inspector или Massif, Helgrind, DPD от Valgrind. "
            }
        },
        "mem_eff-valgrind": {
            "valgrind_bad_temporal_l1": {
                "index": 1,
                "name": "valgrind_bad_temporal_l1",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена низкая временная локальность обращений в L1.",
                "comment": "accost1",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая временная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_temporal_l2": {
                "index": 2,
                "name": "valgrind_bad_temporal_l2",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена низкая временная локальность обращений в L2.",
                "comment": "accost2",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая временная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_spatial_l1": {
                "index": 3,
                "name": "valgrind_bad_spatial_l1",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена низкая пространственная локальность обращений в L1.",
                "comment": "sploss1",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая пространственная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_spatial_l2": {
                "index": 4,
                "name": "valgrind_bad_spatial_l2",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена низкая пространственная локальность обращений в L2.",
                "comment": "sploss2",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая пространственная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_temporal_l1_func": {
                "index": 5,
                "name": "valgrind_bad_temporal_l1_func",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружены функции с очень низкой временной локальностью обращений в L1. Список этих функций (в порядке убывания занимаемой доли программы по числу обращений в память): {functions}.",
                "comment": "стоит поправить это правило, чтобы оно выдавало не только True/False, но и название таких функций",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая временная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_temporal_l2_func": {
                "index": 6,
                "name": "valgrind_bad_temporal_l2_func",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена функция с очень низкой временной локальностью обращений в L2.",
                "comment": "стоит поправить это правило, чтобы оно выдавало не только True/False, но и название таких функций",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая временная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_spatial_l1_func": {
                "index": 7,
                "name": "valgrind_bad_spatial_l1_func",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена функция с очень низкой пространственной локальностью обращений в L1.",
                "comment": "стоит поправить это правило, чтобы оно выдавало не только True/False, но и название таких функций",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая пространственная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "valgrind_bad_spatial_l2_func": {
                "index": 8,
                "name": "valgrind_bad_spatial_l2_func",
                "is_enabled": 1,
                "public": 1,
                "description": "В программе обнаружена функция с очень низкой пространственной локальностью обращений в L2.",
                "comment": "стоит поправить это правило, чтобы оно выдавало не только True/False, но и название таких функций",
                "src_file": "valgrind_perf.py",
                "group": "valgrind",
                "priority": 1,
                "confidence": 3,
                "criticalness": 3,
                "supposition": "Низкая пространственная локальность зачастую приводит к существенным накладным расходам, связанным с ожиданием выполнения операций с памятью. Поэтому работы с памятью, вероятно, организована неэффективно.",
                "text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind, который был получен при выполнении анализа программы. Также можно воспользоваться другими инструментами анализа (например, Intel VTune).",
                "module_recommendation": "---",
                "old_text_recommendation": "Рекомендуется изменить профиль обращений в память для более эффективной работы с подсистемой памяти. Для этих целей стоит изучить детальный файл выдачи от Callgrind (представлен ниже). Также можно воспользоваться другими инструментами анализа (например, Intel VTune)."
            },
            "todo_1": {
                "index": 9,
                "name": "todo_1",
                "is_enabled": 0,
                "public": 0,
                "description": ".",
                "comment": "TODO: rule_locality для отдельных функций (которые занимают существенную часть программы)",
                "src_file": ".",
                "group": ".",
                "priority": 0,
                "confidence": 0,
                "criticalness": 0,
                "supposition": ".",
                "text_recommendation": ".",
                "module_recommendation": ".",
                "old_text_recommendation": ""
            },
            "todo_2": {
                "index": 10,
                "name": "todo_2",
                "is_enabled": 0,
                "public": 0,
                "description": ".",
                "comment": "TODO: L1_MISS_HIGH or LLC_MISS_HIGH для отдельных функций (которые занимают существенную часть программы)",
                "src_file": ".",
                "group": ".",
                "priority": 0,
                "confidence": 0,
                "criticalness": 0,
                "supposition": ".",
                "text_recommendation": ".",
                "module_recommendation": ".",
                "old_text_recommendation": ""
            }
        },
        "general-aps": {
            "aps_mpi_time": {
                "index": 1,
                "name": "aps_mpi_time",
                "is_enabled": 1,
                "public": 1,
                "description": "Слишком большая доля времени приходится на выполнение MPI функций.",
                "comment": "mpi_time > C.APS_MPI_TIME",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Вероятно, работа с MPI организована не очень эффективно. Необходима оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "profiling-mpip",
                "old_text_recommendation": "Анализ MPI программ -> Профилирование"
            },
            "aps_openmp_imbalance": {
                "index": 2,
                "name": "aps_openmp_imbalance",
                "is_enabled": 1,
                "public": 1,
                "description": "Слишком большая доля времени приходится на синхронизацию OpenMP потоков.",
                "comment": "openmp_imbalance > C.APS_OPENMP_IMBALANCE",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Вероятно, присутствует заметный дисбаланс между OpenMP потоками, из-за чего барьеры долго выполняются.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "thread-vtune",
                "old_text_recommendation": "Анализ многопоточной программы "
            },
            "aps_memory_stalls": {
                "index": 3,
                "name": "aps_memory_stalls",
                "is_enabled": 1,
                "public": 1,
                "description": "Процессор простаивал слишком долго в ожидании выполнения операций работы с памятью.",
                "comment": "memory_stalls > C.APS_MEMORY_STALLS",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Работы с памятью, вероятно, организована неэффективно, требуется оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "mem_eff-valgrind",
                "old_text_recommendation": "Анализ работы с памятью -> Эффективность"
            },
            "aps_io_bound": {
                "index": 4,
                "name": "aps_io_bound",
                "is_enabled": 1,
                "public": 1,
                "description": "Процессор простаивал слишком долго в ожидании выполнения операций ввода/вывода.",
                "comment": "io_bound > C.APS_IO_BOUND",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Работы с файлами, вероятно, организована неэффективно, требуется оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "io-vtune",
                "old_text_recommendation": "Анализ ввода/вывода"
            },
            "aps_vectorization": {
                "index": 5,
                "name": "aps_vectorization",
                "is_enabled": 1,
                "public": 1,
                "description": "Большая часть операций с плавающей точкой не векторизована.",
                "comment": "vectorization > C.APS_VECTORIZATION",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Возможности по векторизации слабо используются. Вероятно, не был указан ключ компилятору для использования векторных инструкций, либо данная программа плохо векторизуется.",
                "text_recommendation": "Необходимо провести анализ возможности векторизации программы, например, с помощью Intel Advisor.",
                "module_recommendation": "---",
                "old_text_recommendation": "Необходимо провести анализ возможности векторизации программы, например, с помощью Intel Advisor."
            },
            "aps_mpi_imbalance": {
                "index": 6,
                "name": "aps_mpi_imbalance",
                "is_enabled": 1,
                "public": 1,
                "description": "Некоторые процессы слишком долго ожидают данных во время выполнения MPI операций.",
                "comment": "mpi_imbalance > C.APS_MPI_IMBALANCE",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Вероятно, присутствует заметный дисбаланс между MPI процессами.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "profiling-mpip",
                "old_text_recommendation": "Анализ MPI программ -> Профилирование"
            },
            "aps_cache_stalls": {
                "index": 7,
                "name": "aps_cache_stalls",
                "is_enabled": 1,
                "public": 1,
                "description": "Процессор простаивал слишком долго, ожидая выполнения операций чтения/записи данных в кэш-память.",
                "comment": "not aps_memory_stalls.check() and cache_stalls > C.MEMORY_STALLS",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Вероятно, в программе происходит слишком много кэш-промахов, требуется оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "mem_eff-valgrind",
                "old_text_recommendation": "Анализ работы с памятью -> Эффективность"
            },
            "aps_dram_stalls": {
                "index": 8,
                "name": "aps_dram_stalls",
                "is_enabled": 1,
                "public": 1,
                "description": "Процессор простаивал слишком долго, ожидая выполнения операций чтения/записи данных в оперативную память.",
                "comment": "not aps_memory_stalls.check() and dram_stalls > C.MEMORY_STALLS",
                "src_file": "aps.py",
                "group": "aps",
                "priority": 1,
                "confidence": 2,
                "criticalness": 2,
                "supposition": "Вероятно, в программе происходит часто происходят обращения в оперативную память, требуется оптимизация.",
                "text_recommendation": "Попробуйте выполнить следующий тип детального анализа:",
                "module_recommendation": "mem_eff-valgrind",
                "old_text_recommendation": "Анализ работы с памятью -> Эффективность"
            }
        }
    }
}