<p id="notice"><%= notice %></p>

<% min_perf = @performance.fetch("performance", {}).fetch("min", {}) %>
<% max_perf = @performance.fetch("performance", {}).fetch("max", {}) %>
<% avg_perf = @performance.fetch("performance", {}).fetch("avg", {}) %>

<% if @performance.empty? %>
  <h1 style="color: red">Error: JobDigest service is not responding</h1>
<% end %>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
  google.charts.load('current', {'packages':['corechart']});
  google.charts.setOnLoadCallback(google_callback_wrapper);

  function google_callback_wrapper() {
    LoadData(<%= @info["id"] %>, <%= @info["partition"].include? "gpu" %>);
  }

  $(document).ready(function() {
    ApplyToggle();
  });
</script>

<table>
  <tr>
    <td valign="top">
      <table class="jd_table">
        <tr>
          <th>Task attribute</th>
          <th>Value</th>
        </tr>
        <tr>
          <td>Account:</td>
          <td><%= @info["account"] %></td>
        </tr>

        <tr>
          <td>Task:</td>
          <td><%= @info["job_id"] %></td>
        </tr>

        <tr>
          <td>Cluster:</td>
          <td>Lomonosov<%= @info["cluster"] %></td>
        </tr>

        <tr>
          <td>Partition:</td>
          <td><%= @info["partition"] %></td>
        </tr>

        <tr>
          <td>Nodelist:</td>
          <td style="max-width:600px"><%= @info.fetch("nodelist", "") %></td>
        </tr>

        <tr>
          <td>Num cores:</td>
          <td><%= @info["num_cores"] %></td>
        </tr>

        <tr>
          <td>Num nodes:</td>
          <td><%= @info.fetch("num_nodes", "") %></td>
        </tr>

        <tr>
          <td>Command:</td>
          <td style="max-width:600px"><%= @info.fetch("command", "") %></td>
        </tr>

        <tr>
          <td>Workdir:</td>
          <td style="max-width:600px"><%= @info.fetch("workdir", "") %></td>
        </tr>

        <tr>
          <td>Slurm-out:</td>
          <td style="max-width:600px"><%= @info.fetch("workdir", "") + "/slurm-" + @info["task_id"].to_s + ".out"%></td>
        </tr>

        <tr>
          <td>State:</td>
          <td><%= @info["state"] %></td>
        </tr>

        <tr>
          <td>T submit:</td>
          <td><%= @info["t_submit"] %></td>
        </tr>

        <tr>
          <td>T start:</td>
          <td><%= @info["t_start"] %></td>
        </tr>

        <tr>
          <td>T end:</td>
          <td><%= @info["t_end"] %></td>
        </tr>

        <tr>
          <td>Timelimit:</td>
          <td><%= @info.fetch("timelimit", "") %></td>
        </tr>
      </table>
    </td>
    <td valign="top" style="padding:0 15px 0 15px;">
      <table class="jd_table">
        <tr>
          <th>Sensor</td>
          <th>Min</td>
          <th>Max</td>
          <th>Avg</td>
        </tr>

        <tr>
          <td>cpu user</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_user", min_perf["cpu_user"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_user"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_user", max_perf["cpu_user"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_user"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_user", avg_perf["cpu_user"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_user"]) %></td>
        </tr>

        <tr>
          <td>cpu flops</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_flops", min_perf["cpu_flops"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_flops"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_flops", max_perf["cpu_flops"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_flops"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_flops", avg_perf["cpu_flops"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_flops"]) %></td>
        </tr>

        <% if @info["partition"].include? "gpu" %>
          <tr>
            <td>gpu load</td>
            <td class="jd_table_value <%= get_sensor_color("gpu_load", min_perf["gpu_load"] ) %>">
              <%= format_float_or_nil(min_perf["gpu_load"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_load", max_perf["gpu_load"] ) %>">
              <%= format_float_or_nil(max_perf["gpu_load"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_load", avg_perf["gpu_load"] ) %>">
              <%= format_float_or_nil(avg_perf["gpu_load"]) %></td>
          </tr>

          <tr>
            <td>gpu_mem load</td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_load", min_perf["gpu_mem_load"] ) %>">
              <%= format_float_or_nil(min_perf["gpu_mem_load"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_load", max_perf["gpu_mem_load"] ) %>">
              <%= format_float_or_nil(max_perf["gpu_mem_load"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_load", avg_perf["gpu_mem_load"] ) %>">
              <%= format_float_or_nil(avg_perf["gpu_mem_load"]) %></td>
          </tr>

          <tr>
            <td>gpu_mem usage</td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_usage", min_perf["gpu_mem_usage"]) %>"><%= format_float_or_nil(min_perf["gpu_mem_usage"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_usage", max_perf["gpu_mem_usage"]) %>"><%= format_float_or_nil(max_perf["gpu_mem_usage"]) %></td>
            <td class="jd_table_value <%= get_sensor_color("gpu_mem_usage", avg_perf["gpu_mem_usage"]) %>"><%= format_float_or_nil(avg_perf["gpu_mem_usage"]) %></td>
          </tr>
        <% end %>

        <tr>
          <td>cpu perf l1d repl</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_perf_l1d_repl", min_perf["cpu_perf_l1d_repl"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_perf_l1d_repl"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_perf_l1d_repl", max_perf["cpu_perf_l1d_repl"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_perf_l1d_repl"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_perf_l1d_repl", avg_perf["cpu_perf_l1d_repl"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_perf_l1d_repl"]) %></td>
        </tr>

        <tr>
          <td>llc miss</td>
          <td class="jd_table_value <%= get_sensor_color("llc_miss", min_perf["llc_miss"] ) %>">
            <%= format_float_or_nil(min_perf["llc_miss"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("llc_miss", max_perf["llc_miss"] ) %>">
            <%= format_float_or_nil(max_perf["llc_miss"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("llc_miss", avg_perf["llc_miss"] ) %>">
            <%= format_float_or_nil(avg_perf["llc_miss"]) %></td>
        </tr>

        <tr>
          <td>mem load</td>
          <td class="jd_table_value <%= get_sensor_color("mem_load", min_perf["mem_load"] ) %>">
            <%= format_float_or_nil(min_perf["mem_load"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("mem_load", max_perf["mem_load"] ) %>">
            <%= format_float_or_nil(max_perf["mem_load"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("mem_load", avg_perf["mem_load"] ) %>">
            <%= format_float_or_nil(avg_perf["mem_load"]) %></td>
        </tr>

        <tr>
          <td>mem store</td>
          <td class="jd_table_value <%= get_sensor_color("mem_store", min_perf["mem_store"] ) %>">
            <%= format_float_or_nil(min_perf["mem_store"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("mem_store", max_perf["mem_store"] ) %>">
            <%= format_float_or_nil(max_perf["mem_store"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("mem_store", avg_perf["mem_store"] ) %>">
            <%= format_float_or_nil(avg_perf["mem_store"]) %></td>
        </tr>

        <tr>
          <td>ib rcv data</td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_data", min_perf["ib_rcv_data"] ) %>">
            <%= format_float_or_nil(min_perf["ib_rcv_data"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_data", max_perf["ib_rcv_data"] ) %>">
            <%= format_float_or_nil(max_perf["ib_rcv_data"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_data", avg_perf["ib_rcv_data"] ) %>">
            <%= format_float_or_nil(avg_perf["ib_rcv_data"]) %></td>
        </tr>
        <tr>
          <td>ib xmit data</td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_data", min_perf["ib_xmit_data"] ) %>">
            <%= format_float_or_nil(min_perf["ib_xmit_data"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_data", max_perf["ib_xmit_data"] ) %>">
            <%= format_float_or_nil(max_perf["ib_xmit_data"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_data", avg_perf["ib_xmit_data"] ) %>">
            <%= format_float_or_nil(avg_perf["ib_xmit_data"]) %></td>
        </tr>

        <tr>
          <td>ib rcv pckts</td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_pckts", min_perf["ib_rcv_pckts"] ) %>">
            <%= format_float_or_nil(min_perf["ib_rcv_pckts"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_pckts", max_perf["ib_rcv_pckts"] ) %>">
            <%= format_float_or_nil(max_perf["ib_rcv_pckts"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_rcv_pckts", avg_perf["ib_rcv_pckts"] ) %>">
            <%= format_float_or_nil(avg_perf["ib_rcv_pckts"]) %></td>
        </tr>

        <tr>
          <td>ib xmit pckts</td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_pckts", min_perf["ib_xmit_pckts"] ) %>">
            <%= format_float_or_nil(min_perf["ib_xmit_pckts"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_pckts", max_perf["ib_xmit_pckts"] ) %>">
            <%= format_float_or_nil(max_perf["ib_xmit_pckts"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("ib_xmit_pckts", avg_perf["ib_xmit_pckts"] ) %>">
            <%= format_float_or_nil(avg_perf["ib_xmit_pckts"]) %></td>
        </tr>

        <tr>
          <td>loadavg</td>
          <td class="jd_table_value <%= get_sensor_color("loadavg", min_perf["loadavg"] ) %>">
            <%= format_float_or_nil(min_perf["loadavg"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("loadavg", max_perf["loadavg"] ) %>">
            <%= format_float_or_nil(max_perf["loadavg"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("loadavg", avg_perf["loadavg"] ) %>">
            <%= format_float_or_nil(avg_perf["loadavg"]) %></td>
        </tr>

        <tr>
          <td>cpu system</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_system", min_perf["cpu_system"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_system"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_system", max_perf["cpu_system"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_system"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_system", avg_perf["cpu_system"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_system"]) %></td>
        </tr>

        <tr>
          <td>cpu iowait</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_iowait", min_perf["cpu_iowait"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_iowait"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_iowait", max_perf["cpu_iowait"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_iowait"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_iowait", avg_perf["cpu_iowait"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_iowait"]) %></td>
        </tr>

        <tr>
          <td>cpu idle</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_idle", min_perf["cpu_idle"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_idle"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_idle", max_perf["cpu_idle"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_idle"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_idle", avg_perf["cpu_idle"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_idle"]) %></td>
        </tr>

        <tr>
          <td>cpu irq</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_irq", min_perf["cpu_irq"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_irq"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_irq", max_perf["cpu_irq"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_irq"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_irq", avg_perf["cpu_irq"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_irq"]) %></td>
        </tr>

        <tr>
          <td>cpu soft irq</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_soft_irq", min_perf["cpu_soft_irq"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_soft_irq"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_soft_irq", max_perf["cpu_soft_irq"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_soft_irq"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_soft_irq", avg_perf["cpu_soft_irq"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_soft_irq"]) %></td>
        </tr>

        <tr>
          <td>cpu nice</td>
          <td class="jd_table_value <%= get_sensor_color("cpu_nice", min_perf["cpu_nice"] ) %>">
            <%= format_float_or_nil(min_perf["cpu_nice"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_nice", max_perf["cpu_nice"] ) %>">
            <%= format_float_or_nil(max_perf["cpu_nice"]) %></td>
          <td class="jd_table_value <%= get_sensor_color("cpu_nice", avg_perf["cpu_nice"] ) %>">
            <%= format_float_or_nil(avg_perf["cpu_nice"]) %></td>
        </tr>

      </table>
    </td>

<% ib_avg_rcv_pckt_size = avg_perf.empty? ? nil : avg_perf["ib_rcv_data"].to_f / avg_perf["ib_rcv_pckts"].to_f %>
<% ib_avg_xmit_pckt_size = avg_perf.empty? ? nil : avg_perf["ib_xmit_data"].to_f / avg_perf["ib_xmit_pckts"].to_f %>
<% l1_to_l3_ratio = avg_perf.empty? ? nil : avg_perf["cpu_perf_l1d_repl"].to_f / avg_perf["llc_miss"].to_f %>
<% l1_to_mem_ratio = avg_perf.empty? ? nil : avg_perf["cpu_perf_l1d_repl"].to_f / (avg_perf["mem_load"] .to_f + avg_perf["mem_store"].to_f) %>
<% l3_to_mem_ratio = avg_perf.empty? ? nil : avg_perf["llc_miss"].to_f / (avg_perf["mem_load"] .to_f + avg_perf["mem_store"].to_f) %>

    <td valign="top">
      <table class="jd_table">
        <tr>
          <th>Derivative sensor</th>
          <th>Value</th>
        </tr>
        <tr>
          <td>ib_avg_rcv_pckt_size</td>
            <td class="jd_table_value <%= get_sensor_color("ib_avg_rcv_pckt_size", ib_avg_rcv_pckt_size) %>">
              <%= format_float_or_nil(ib_avg_rcv_pckt_size) %></td>
        </tr>
        <tr>
          <td>ib_avg_xmit_pckt_size</td>
          <td class="jd_table_value <%= get_sensor_color("ib_avg_xmit_pckt_size", ib_avg_xmit_pckt_size) %>">
            <%= format_float_or_nil(ib_avg_xmit_pckt_size) %></td>
        </tr>
        <tr>
          <td>l1_to_l3_ratio</td>
          <td class="jd_table_value <%= get_sensor_color("l1_to_l3_ratio", l1_to_l3_ratio) %>">
            <%= format_float_or_nil(l1_to_l3_ratio) %></td>
        </tr>
        <tr>
          <td>l1_to_mem_ratio</td>

          <td class="jd_table_value <%= get_sensor_color("l1_to_mem_ratio", l1_to_mem_ratio) %>">
            <%= format_float_or_nil(l1_to_mem_ratio) %></td>
        </tr>
        <tr>
          <td>l3_to_mem_ratio</td>
          <td class="jd_table_value <%= get_sensor_color("l3_to_mem_ratio", l3_to_mem_ratio) %>">
            <%= format_float_or_nil(l3_to_mem_ratio) %></td>
        </tr>
      </table>
    </td>
  </tr>
</table>

<p style="color: red; font-size: 30px;">Keep in mind 5-min approximation: average data and graphs for small tasks may be very
    inaccurate.
</p>

<h2>Big tasks may require up to half minute to load, be patient.</h2>

<h3>General information: <input type="button" value="Click to show details" onclick="ToggleInfo();"></h3>

<div class="info"><p>
  All processor counters (CPU user load, CPU flops, l1 miss, l3 miss, mem_load, mem_store) are gatherd from each core by monitoring agents. Then processor counters from all cores are mixed together to calculate minimum, maximum and average value withhin every 300 seconds interval.</br>

  Visual graphics are calculated as follows:
  'min' graphs - Minimum accross all minimal values from all nodes for the interval</br>
  'max' graphs - Maximum accross all maximal values from all nodes for the interval</br>
  'avg' graphs - Average accross all average values from all nodes for the interval</br>
  'avg_min' graphs - Average accross all minimum values from all nodes for the interval</br>
  'avg_max' graphs - Average accross all maximum values from all nodes for the interval</br>

  sql: SELECT time, MIN(min) as min, MAX(max) as max, AVG(min) as avg_min, AVG(max) as avg_max, AVG(avg) as avg from
  {0} WHERE time > t_start + 300 AND time < t_end - 300 AND node_id in ({1}) GROUP BY time ORDER BY time;
</p></div>

<input type="button" value="show/hide all graphs" onclick="ToggleAll();">

<h1>CPU user load</h1>

<div id="cpu_user" class="graph"></div>
<%# staff
<a href="/heatmap/cpu_user/$id" target="_blank">heatmap</a>
<a href="/data/cpu_user/$id" target="_blank">JSON data</a>
<a href="/data/cpu_user/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU user load, minimum 0, max 100
  </br>
  Percent of time a core was busy with user task (not including io/system work and so on)
</p></div>

<h1>CPU flops</h1>

<div id="cpu_flops" class="graph"></div>
<%# staff
<a href="/heatmap/cpu_flops/$id" target="_blank">heatmap</a>
<a href="/data/cpu_flops/$id" target="_blank">JSON data</a>
<a href="/data/cpu_flops/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU 'flops' counter</br>
  CPU in lomonosov: 06_2CH, intel manual, 19.6, p2603</br>
  Config(2015.05.22): CPU_PERF_COUNTER02:0x0510</br>
  </br>
  FP_COMP_OPS_EXE.X87: Counts the number of FP Computational Uops Executed. The number of FADD, FSUB, FCOM, FMULs,
  integer ULsand IMULs, FDIVs, FPREMs, FSQRTS, integer DIVs, and IDIVs. This event does not distinguish an FADD used
  in the middle of a transcendental flow from a separate FADD instruction.</br>
  </br>
  FP_COMP_OPS_EXE.SSE_FP: Counts number of SSE and SSE2 FP uops executed.</br>
</p></div>


<% if @info["partition"].include? "gpu" %>
  <h1>GPU load</h1>

  <div id="gpu_load" class="graph"></div>
  <%# staff
  <a href="/heatmap/gpu_load/$id" target="_blank">heatmap</a>
  <a href="/data/gpu_load/$id" target="_blank">JSON data</a>
  <a href="/data/gpu_load/$id?format=csv" target="_blank">CSV data</a>
%>

  <div class="info"><p>
    GPU load in percent, as reported by NVML</br>
  </p></div>

  <h1>GPU mem load</h1>

  <div id="gpu_mem_load" class="graph"></div>
  <%# staff
  <a href="/heatmap/gpu_mem_load/$id" target="_blank">heatmap</a>
  <a href="/data/gpu_mem_load/$id" target="_blank">JSON data</a>
  <a href="/data/gpu_mem_load/$id?format=csv" target="_blank">CSV data</a>
%>


  <div class="info"><p>
    GPU memory load in percent, as reported by NVML</br>
  </p></div>

  <h1>GPU mem used</h1>

  <div id="gpu_mem_usage" class="graph"></div>
  <%# staff
  <a href="/heatmap/gpu_mem_usage/$id" target="_blank">heatmap</a>
  <a href="/data/gpu_mem_usage/$id" target="_blank">JSON data</a>
  <a href="/data/gpu_mem_usage/$id?format=csv" target="_blank">CSV data</a>
%>
  <div class="info"><p>
    GPU memory usage in MB</br>
  </p></div>

<% end %>

<h1>l1 miss</h1>

<div id="cpu_perf_l1d_repl" class="graph"></div>

<%# staff
<a href="/heatmap/cpu_perf_l1d_repl/$id" target="_blank">heatmap</a>
<a href="/data/cpu_perf_l1d_repl/$id" target="_blank">JSON data</a>
<a href="/data/cpu_perf_l1d_repl/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU l1 cache miss counter</br>
  CPU in lomonosov: 06_2CH, intel manual, 19.6, p2608</br>
  </br>
  Config(2015.05.22): CPU_PERF_COUNTER01:0x0151</br>
  </br>
  L1D.REPL: Counts the number of lines brought into the L1 data cache.
</p></div>

<h1>l3 miss</h1>

<div id="llc_miss" class="graph"></div>
<%# staff
<a href="/heatmap/llc_miss/$id" target="_blank">heatmap</a>
<a href="/data/llc_miss/$id" target="_blank">JSON data</a>
<a href="/data/llc_miss/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU last level cache miss counter</br>
  intel manual, 19.1, p2536</br>
  </br>
  Config(2015.05.22): CPU_PERF_FIXED01:0x412e</br>
  </br>
  LLC miss: Longest latency cache miss
</p></div>

<h1>mem_load</h1>

<div id="mem_load" class="graph"></div>
<%# staff
<a href="/heatmap/mem_load/$id" target="_blank">heatmap</a>
<a href="/data/mem_load/$id" target="_blank">JSON data</a>
<a href="/data/mem_load/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU memory load instructions counter</br>
  CPU in lomonosov: 06_2CH, intel manual, 19.6, p2602</br>
  </br>
  Config(2015.05.22): CPU_PERF_COUNTER03:0x010B</br>
  </br>
  MEM_INST_RETIRED.LOADS: Counts the number of instructions with an architecturally-visible load retired on the
  architected path.
</p></div>

<h1>mem_store</h1>

<div id="mem_store" class="graph"></div>
<%# staff
<a href="/heatmap/mem_store/$id" target="_blank">heatmap</a>
<a href="/data/mem_store/$id" target="_blank">JSON data</a>
<a href="/data/mem_store/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  CPU memory store instructions counter</br>
  CPU in lomonosov: 06_2CH, intel manual, 19.6, p2602</br>
  </br>
  Config(2015.05.22): CPU_PERF_COUNTER04:0x020B</br>
  </br>
  MEM_INST_RETIRED.STORES: Counts the number of instructions with an architecturally-visibl store retired on the
  architected path.
</p></div>

<h1>ib_rcv_data</h1>

<div id="ib_rcv_data" class="graph"></div>
<%# staff
<a href="/heatmap/ib_rcv_data/$id" target="_blank">heatmap</a>
<a href="/data/ib_rcv_data/$id" target="_blank">JSON data</a>
<a href="/data/ib_rcv_data/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  Infiniband recieved data in bytes
</p></div>


<h1>ib_xmit_data</h1>

<div id="ib_xmit_data" class="graph"></div>
<%# staff
<a href="/heatmap/ib_xmit_data/$id" target="_blank">heatmap</a>
<a href="/data/ib_xmit_data/$id" target="_blank">JSON data</a>
<a href="/data/ib_xmit_data/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  Infiniband sent data in bytes
</p></div>

<h1>ib_rcv_pckts</h1>

<div id="ib_rcv_pckts" class="graph"></div>
<%# staff
<a href="/heatmap/ib_rcv_pckts/$id" target="_blank">heatmap</a>
<a href="/data/ib_rcv_pckts/$id" target="_blank">JSON data</a>
<a href="/data/ib_rcv_pckts/$id?format=csv" target="_blank">CSV data</a>
%>


<div class="info"><p>
  Infiniband recieved data in packets
</p></div>

<h1>ib_xmit_pckts</h1>

<div id="ib_xmit_pckts" class="graph"></div>
<%# staff
<a href="/heatmap/ib_xmit_pckts/$id" target="_blank">heatmap</a>
<a href="/data/ib_xmit_pckts/$id" target="_blank">JSON data</a>
<a href="/data/ib_xmit_pckts/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  Infiniband sent data in packets
</p></div>

<h1>loadavg</h1>

<div id="loadavg" class="graph"></div>
<%# staff
<a href="/heatmap/loadavg/$id" target="_blank">heatmap</a>
<a href="/data/loadavg/$id" target="_blank">JSON data</a>
<a href="/data/loadavg/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  Average number of processes ready for execution for last minute.</br>
  see /proc/loadavg (http://man7.org/linux/man-pages/man5/proc.5.html)
</p></div>

<h1>CPU system load</h1>

<div id="cpu_system" class="graph"></div>
<%# staff
<a href="/heatmap/cpu_system/$id" target="_blank">heatmap</a>
<a href="/data/cpu_system/$id" target="_blank">JSON data</a>
<a href="/data/cpu_system/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  Percent of time a core was busy in kernel space
  </br>
</p></div>

<h1>CPU iowait</h1>

<div id="cpu_iowait" class="graph"></div>
<%# staff
<a href="/heatmap/cpu_iowait/$id" target="_blank">heatmap</a>
<a href="/data/cpu_iowait/$id" target="_blank">JSON data</a>
<a href="/data/cpu_iowait/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  CPU iowait load, minimum 0, max 100
  </br>
  Percent of time a core was idle due to waiting for IO operation to complete
</p></div>

<h1>CPU idle</h1>

<div id="cpu_idle" class="graph"></div>
<%# staff
<a href="/heatmap/cpu_idle/$id" target="_blank">heatmap</a>
<a href="/data/cpu_idle/$id" target="_blank">JSON data</a>
<a href="/data/cpu_idle/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  CPU idle load, minimum 0, max 100
  </br>
  Percent of time a core was in idle state
</p></div>

<h1>CPU nice load</h1>

<div id="cpu_nice" class="graph"></div>
<%# staff
<a href="/heatmap/ib_rcv_data/$id" target="_blank">heatmap</a>
<a href="/data/ib_rcv_data/$id" target="_blank">JSON data</a>
<a href="/data/ib_rcv_data/$id?format=csv" target="_blank">CSV data</a>
%>

<div class="info"><p>
  Percent of time a core was busy with nice(low priority) tasks
  </br>
</p></div>

<h1>CPU irq load</h1>

<div id="cpu_irq" class="graph"></div>
<div class="info"><p>
  CPU irq load, minimum 0, max 100
  </br>
  Percent of time a core was busy with hardware interrupts
</p></div>

<h1>CPU soft_irq load</h1>

<div id="cpu_soft_irq" class="graph"></div>
<div class="info"><p>
  CPU soft_irq load, minimum 0, max 100
  </br>
  Percent of time a core was busy with software interrupts
</p></div>
