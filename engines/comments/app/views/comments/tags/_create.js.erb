	{
		var attachable_id =   "<%=@attach_to[:ids].first%>";
	  var context_title = "<%=j Comments::Comment.human_attribute_name(:context) %>";
	  var successMessage = "<%= t('.create.success_message') %>";
	  var errorsMessage = "<%= t('.create.errors_message') %>";
		var names_title = "<%= t('.create.names_title') %>";
		var tags_names = <%=raw Comments::Tag.allowed_names(current_user.id)%>;

	  <%if @with_context.to_s =='create_with_context'%>
	     var context_ids = <%=raw @contexts.map{ |c| c.id.to_s }.to_json%>;
	     var context_labels = <%=raw @contexts.map(&:name).to_json%>;
	     var context_hidden = false;
	  <% else %>
	    var context_ids = [];
	    var context_labels = [];
	    var context_hidden = true;
	  <% end %>
	    context_ids.push(' ');
	    context_labels.push("<%=t('.create.no_context')%>");
	  main_element.find(`.create_tag`).alpaca({
	      "schema": {
	          "title": "<%=j t('.create.write_tag')%>",
	          "type": "object",
	          "properties": {
	            "tag":{
	              "type": "object",
	              "properties":{
	                "context_id":{
	                  "title": context_title,
	                  "enum": context_ids,
	                  "required": true,
	                  "default": ' '
	                },
									"names":{
										"title": names_title,
	                  "enum": tags_names,
	                  "default": ' '
									},
	                "name": {
										"title": name_label,
	                  "required": true
	                },
	                "attachable_type":{
	                  "default": attachable_type
	                },
	                "attachable_id":{
	                  "default": attachable_id
	                }
	              }
	            }
	          }
	      },
	  		"options":{
	        "focus": "",
	        "hideInitValidationError":true,
	  			"fields":{
	          "tag":{
	            "fields":{
	              "name": {
	                      "type": "text",
	                      "wordlimit": 250,
	              },
								"names":{
									"type":"select",
									"hideNone": "true",
									"onFieldChange": function(e) {
										var value = this.getValue();
										var name = main_element.find(`.create_tag`).alpaca('get').getControlByPath('tag/name');
										var name_value = name.getValue();
										if(name && name_value.replace(/\s*$/g,'')[-1] == ';'){
											name.setValue(name_value + ';' + value + ';')
										}
										else{
											name.setValue(name_value + value + ';');
										}
        					}
								},
	              "attachable_type":{
	                "type": "hidden"
	              },
	              "attachable_id":{
	                "type": "hidden"
	              },
	              "context_id":{
	                "type":"select",
	                "optionLabels": context_labels,
	                "hidden": context_hidden
	              }

	            }
	          },
	  			},
	        "form": {
	              "attributes": {
	                  "method": "post",
	                  "action": "/comments/tags/create"
	              },
	              "buttons": {
	                  "submit": {
	                      "title": "<%= t 'buttons.save'%>",
	                      "click": function(e) {
	                        var promise = this.ajaxSubmit();
	                        var elem = main_element.find("#messages");
	                        elem.empty();
	                        promise.done(function() {
	                          elem.html('<div class="alert alert-success" id="success_div"></div>');
	                          elem.find("#success_div").text(successMessage);
														form.getControlByPath('tag/name').getControlEl().val('');
	                        });
	                        promise.fail(function(arg) {
	                          elem.html('<div class="alert alert-danger" id="errors_div"></div>');
	                          elem.find("#errors_div").text(errorsMessage);
	                        });
	                        promise.always(function() {
	                            pageClick(1);
	                        });
	                      }
	                  }
	              }
	          }
	  		},
	      "postRender": function(control) {
					form = control;
	        apply_select();
	      }
	  });
}
