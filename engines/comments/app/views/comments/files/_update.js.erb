
main_element.on("click",'.edit-button',renderEdit);
function renderEdit()
{
	var id = $(this).parents("article").attr('file-id');
	var context_id = $(this).parents("article").attr('context-id');
	var contextIdForm = context_id ? context_id : ' ';
	var text = $(this).parent().find('p').text();
	var context_title = "<%=j Comments::Comment.human_attribute_name(:context) %>";
	var successMessage = "<%= t('.edit.success_message') %>";
	var errorsMessage = "<%= t('.edit.errors_message') %>";
	var discard_title = "<%= t('.edit.discard_title') %>";
	var alpacaContainer = $(this).parent().find('div.alpaca-container');
	var messagesContainer = $(this).parent().find('#messages');
	var form;

	<%if @with_context.to_s =='create_with_context'%>
		 var context_ids = <%=raw @contexts.map{ |c| c.id.to_s }.to_json%>;
		 var context_labels = <%=raw @contexts.map(&:name).to_json%>;
		 var context_hidden = false;
	<% else %>
		var context_ids = [];
		var context_labels = [];
		var context_hidden = true;
	<% end %>
		context_ids.push(' ');
		context_labels.push("<%=t('.create.no_context')%>");
		alpacaContainer.empty();
		alpacaContainer.alpaca({
				"schema": {
						"type": "object",
								"properties":{
									"context_id":{
										"title": context_title,
										"enum": context_ids,
										"required": true,
										"default": context_id
									},
									"description": {
										"required": true,
										"title": description_title,
										"default": text
									},
									"id":{
										"default": id
									}
								}
				},
				"options":{
					"focus": "",
					"hideInitValidationError":true,
							"fields":{
								"description":{
									"type": "textarea",
									"rows": 5,
									"label": "",
									"wordlimit": 250,

								},
								"context_id":{
									"type":"select",
									"optionLabels": context_labels,
									"hidden": context_hidden
								},
								"id":{
									"type": "hidden"
								}

					},
					"form": {
								"attributes": {
										"method": "post",
										"action": "/comments/files/update"
								},
								"buttons": {
										"submit": {
												"title": "<%= t 'buttons.save'%>",
												"fieldClass": "sss",
												"click": function(e) {
													var promise = this.ajaxSubmit();
													messagesContainer.empty();
													promise.done(function() {
														messagesContainer.html('<div class="alert alert-success" id="success_div"></div>');
														messagesContainer.find("#success_div").text(successMessage);
														var updatedText = form.getControlByPath('description').getValue();
														var context_id = form.getControlByPath('context_id').getValue();
														form.domEl.parents("article").attr('context-id',context_id);
														alpacaContainer.html(`<p>${updatedText}</p>`);
													});
													promise.fail(function(arg) {
														messagesContainer.html('<div class="alert alert-danger" id="errors_div"></div>');
														messagesContainer.find("#errors_div").text(errorsMessage);
													});
												}
										},
										"discard":{
											"title": discard_title,
											"click":function(e){
												messagesContainer.empty();
												alpacaContainer.html(`<p>${text}</p>`);
											}
										}
								}
						}
				},
				"postRender": function(control) {
					form = control;
					apply_select();
				}
		});
}
