= form_with(model: [notification, user_default], local: true) do |form|
  - if user_default.errors.any?
    .alert.alert-danger
      h4 = t('.error_count', count: user_default.errors.count)
      ul
        - user_default.errors.full_messages.each do |message|
          li = message

  - global_default = notification.global_default

  .form-group
    h4 = t('.main_settings')
    p.text-muted = t('.use_global')
    .row.mt-3
      .col-md-4
        label.d-block.mb-3 = t('.telegram_notifications')
        .btn-group.btn-group-toggle data-toggle="buttons"
          label.btn.btn-outline-secondary class=(user_default.notify_tg.nil? ? 'active' : '')
            = form.radio_button :notify_tg, nil, checked: user_default.notify_tg.nil?, autocomplete: "off"
            = t('.default')
            = global_default.notify_tg ? t('.yes_short') : t('.no_short')
          label.btn.btn-outline-success class=(user_default.notify_tg == true ? 'active' : '')
            = form.radio_button :notify_tg, true, checked: user_default.notify_tg == true, autocomplete: "off"
            = t('.yes')
          label.btn.btn-outline-danger class=(user_default.notify_tg == false ? 'active' : '')
            = form.radio_button :notify_tg, false, checked: user_default.notify_tg == false, autocomplete: "off"
            = t('.no')

      .col-md-4
        label.d-block.mb-3 = t('.email_notifications')
        .btn-group.btn-group-toggle data-toggle="buttons"
          label.btn.btn-outline-secondary class=(user_default.notify_mail.nil? ? 'active' : '')
            = form.radio_button :notify_mail, nil, checked: user_default.notify_mail.nil?, autocomplete: "off"
            = t('.default')
            = global_default.notify_mail ? t('.yes_short') : t('.no_short')
          label.btn.btn-outline-success class=(user_default.notify_mail == true ? 'active' : '')
            = form.radio_button :notify_mail, true, checked: user_default.notify_mail == true, autocomplete: "off"
            = t('.yes')
          label.btn.btn-outline-danger class=(user_default.notify_mail == false ? 'active' : '')
            = form.radio_button :notify_mail, false, checked: user_default.notify_mail == false, autocomplete: "off"
            = t('.no')

      .col-md-4
        label.d-block.mb-3 = t('.stop_job')
        .btn-group.btn-group-toggle data-toggle="buttons"
          label.btn.btn-outline-secondary class=(user_default.kill_job.nil? ? 'active' : '')
            = form.radio_button :kill_job, nil, checked: user_default.kill_job.nil?, autocomplete: "off"
            = t('.default')
            = global_default.kill_job ? t('.yes_short') : t('.no_short')
          label.btn.btn-outline-success class=(user_default.kill_job == true ? 'active' : '')
            = form.radio_button :kill_job, true, checked: user_default.kill_job == true, autocomplete: "off"
            = t('.yes')
          label.btn.btn-outline-danger class=(user_default.kill_job == false ? 'active' : '')
            = form.radio_button :kill_job, false, checked: user_default.kill_job == false, autocomplete: "off"
            = t('.no')

  .form-group.mt-4
    = form.submit t('.save_settings'), class: "btn btn-primary"
    = link_to t('.cancel'), users_job_notifications_path(user), class: "btn btn-outline-secondary"

javascript:
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.reset-field').forEach(function(button) {
      button.addEventListener('click', function() {
        const targetId = this.getAttribute('data-target');
        const targetField = document.querySelector(targetId);
        if (targetField) {
          targetField.value = '';
          targetField.dispatchEvent(new Event('change'));
        }
      });
    });
  });
