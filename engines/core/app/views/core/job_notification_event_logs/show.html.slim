.container.mt-4
  .mb-4
    = link_to job_notification_event_logs_path, class: "btn btn-outline-secondary" do
      i.fa.fa-arrow-left
      = t('.back_to_logs')
  .card.mb-4
    .card-header
      h2
        = t('.log_info_header', id: @log.id)
    .card-body
      .row
        .col-md-6
          h4
            = t('.main_info')
          table.table
            tr
              th width="30%"
                = t('.id_label')
                | :
              td
                = @log.id
            tr
              th
                = t('.user_label')
                | :
              td
                = link_to @log.user.email, "/profile"
            tr
              th
                = t('.period_label')
                | :
              td
                = @log.start_period&.strftime('%d.%m.%Y %H:%M')
                |  -
                = @log.end_period&.strftime('%d.%m.%Y %H:%M')
            tr
              th
                = t('.processed_events')
                | :
              td
                = @log.events_count
            tr
              th
                = t('.processing_date')
                | :
              td
                = @log.created_at.strftime('%d.%m.%Y %H:%M:%S')
        .col-md-6
          h4
            = t('.summary_data')
          - if @log.summary_data.present?
            .card.bg-light
              .card-body
                .mb-3
                  strong
                    = t('.total_processed')
                    | :
                  = @log.summary_data['total_count']
                  = t('.events')
                .mb-3
                  strong
                    = t('.time_range')
                    | :
                  = Time.parse(@log.summary_data['time_range']['from']).strftime('%d.%m.%Y %H:%M:%S')
                  |  â€”
                  = Time.parse(@log.summary_data['time_range']['to']).strftime('%d.%m.%Y %H:%M:%S')
                .mb-3
                  strong
                    = t('.unique_notifications')
                    | :
                  = @log.summary_data['unique_notifications']
                  br
                  strong
                    = t('.unique_projects')
                    | :
                  = @log.summary_data['unique_projects']
                  br
                  strong
                    = t('.unique_jobs')
                    | :
                  = @log.summary_data['unique_jobs']
          - else
            .alert.alert-info
              = t('.no_summary_data')
      - if @log.summary_data.present? && @log.summary_data['notifications'].present?
        .mt-4
          h4
            = t('.notification_distribution')
          .table-responsive
            table.table.table-hover
              thead
                tr
                  th
                    = t('.notification')
                  th
                    = t('.event_count')
              tbody
                - notifications_sorted = @log.summary_data['notifications'].sort_by { |_, count| -count }
                - notifications_sorted.each do |notification_key, count|
                  - notification_id = notification_key.gsub('notification_', '').to_i
                  - notification = Core::JobNotification.find_by(id: notification_id)
                  tr
                    td
                      - if notification
                        = link_to notification.name, job_notification_path(notification)
                      - else
                        = notification_key
                    td
                      = count
      - if @log.summary_data.present? && @log.summary_data['projects'].present?
        .mt-4
          h4
            = t('.project_distribution')
          .table-responsive
            table.table.table-hover
              thead
                tr
                  th
                    = t('.project')
                  th
                    = t('.event_count')
              tbody
                - projects_sorted = @log.summary_data['projects'].sort_by { |_, count| -count }
                - projects_sorted.each do |project_key, count|
                  - project_id = project_key.gsub('project_', '').to_i
                  - project = Core::Project.find_by(id: project_id)
                  tr
                    td
                      - if project
                        = link_to project.title, project_path(project)
                      - else
                        = project_key
                    td
                      = count
      - if @log.details.present?
        .mt-4
          h4
            = t('.detailed_description')
          .card
            .card-body
              pre.mb-0
                = @log.details
  .card.mb-4
    .card-header
      h3
        = t('.actions_header')
    .card-body
      = button_to t('.resend_digest'), resend_digest_job_notification_event_log_path(@log), method: :post, class: "btn btn-primary", data: { confirm: t('.resend_confirmation', email: @log.user.email) }
